/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package vn.tad_sebs.View;
import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionListener;
import java.awt.event.KeyEvent;
import java.util.List;

import javax.swing.event.ListSelectionListener;
import javax.swing.table.DefaultTableModel;

import vn.tad_sebs.Controller.MainController;
import vn.tad_sebs.Model.Data;

/**
 *
 * @author ASUS
 */
public class DataView extends javax.swing.JFrame {

    /**
     * Creates new form DataView
     */
    public DataView() {
        initComponents();
        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        btnEditData.setEnabled(false);
        btnDeleteData.setEnabled(false);

        this.addWindowListener(new java.awt.event.WindowAdapter() {
            @Override
            public void windowClosed(java.awt.event.WindowEvent windowEvent) {
                MainView mainView = new MainView();
                MainController mainController = new MainController(mainView);
                mainController.showMainView();
            }
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        Datatable = new javax.swing.JTable();
        CbbSearchData = new javax.swing.JComboBox<>();
        FSearchData = new javax.swing.JTextField();
        btnSearchData = new javax.swing.JButton();
        btnSortbyIDData = new javax.swing.JButton();
        btnSortbyNameData = new javax.swing.JButton();
        FIDSearchData = new javax.swing.JTextField();
        FNameSearchData = new javax.swing.JTextField();
        FCategorySearch = new javax.swing.JTextField();
        FAuthorSearch = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        btnAddData = new javax.swing.JButton();
        btnDeleteData = new javax.swing.JButton();
        btnEditData = new javax.swing.JButton();
        btnClearData = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel6 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("QUẢN LÝ TÀI LIỆU");
        setIconImage(icon.getImage());
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        Datatable.setBackground(new java.awt.Color(174, 228, 255));
        Datatable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Tên tài liệu", "Thể loại", "Tác giả"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(Datatable);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 60, 986, 503));

        CbbSearchData.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        CbbSearchData.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "ID", "Tên tài liệu", "Thể loại", "Tác giả" }));
        getContentPane().add(CbbSearchData, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 20, -1, 30));

        FSearchData.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FSearchDataActionPerformed(evt);
            }
        });
        FSearchData.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                FSearchDataKeyPressed(evt);
            }
        });
        getContentPane().add(FSearchData, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 20, 118, 30));

        btnSearchData.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        btnSearchData.setIcon(new javax.swing.ImageIcon(getClass().getResource("/vn/tad_sebs/icon/Find.png"))); // NOI18N
        btnSearchData.setText("Tìm");
        btnSearchData.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchDataActionPerformed(evt);
            }
        });
        getContentPane().add(btnSearchData, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 20, -1, -1));

        btnSortbyIDData.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        btnSortbyIDData.setIcon(new javax.swing.ImageIcon(getClass().getResource("/vn/tad_sebs/icon/Sort.png"))); // NOI18N
        btnSortbyIDData.setText("Sắp xếp theo ID");
        getContentPane().add(btnSortbyIDData, new org.netbeans.lib.awtextra.AbsoluteConstraints(1010, 430, 180, 80));

        btnSortbyNameData.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        btnSortbyNameData.setIcon(new javax.swing.ImageIcon(getClass().getResource("/vn/tad_sebs/icon/Sort.png"))); // NOI18N
        btnSortbyNameData.setText("Sắp xếp theo Tên");
        getContentPane().add(btnSortbyNameData, new org.netbeans.lib.awtextra.AbsoluteConstraints(1010, 320, 180, 80));

        FIDSearchData.setEnabled(false);
        getContentPane().add(FIDSearchData, new org.netbeans.lib.awtextra.AbsoluteConstraints(1140, 100, 161, -1));
        getContentPane().add(FNameSearchData, new org.netbeans.lib.awtextra.AbsoluteConstraints(1140, 140, 161, -1));
        getContentPane().add(FCategorySearch, new org.netbeans.lib.awtextra.AbsoluteConstraints(1140, 180, 161, -1));

        FAuthorSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FAuthorSearchActionPerformed(evt);
            }
        });
        getContentPane().add(FAuthorSearch, new org.netbeans.lib.awtextra.AbsoluteConstraints(1140, 220, 161, -1));

        jLabel1.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(51, 255, 73));
        jLabel1.setText("ID");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(1020, 100, 30, -1));

        jLabel2.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(51, 255, 73));
        jLabel2.setText("Tên tài liệu");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(1020, 140, 100, -1));

        jLabel3.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(51, 255, 73));
        jLabel3.setText("Thể loại");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(1020, 180, 70, -1));

        jLabel4.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(51, 255, 73));
        jLabel4.setText("Tác giả");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(1020, 220, 60, -1));

        btnAddData.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        btnAddData.setIcon(new javax.swing.ImageIcon(getClass().getResource("/vn/tad_sebs/icon/Add.png"))); // NOI18N
        btnAddData.setText("Thêm");
        getContentPane().add(btnAddData, new org.netbeans.lib.awtextra.AbsoluteConstraints(1000, 260, -1, -1));

        btnDeleteData.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        btnDeleteData.setIcon(new javax.swing.ImageIcon(getClass().getResource("/vn/tad_sebs/icon/Delete.png"))); // NOI18N
        btnDeleteData.setText("Xóa");
        getContentPane().add(btnDeleteData, new org.netbeans.lib.awtextra.AbsoluteConstraints(1100, 260, -1, -1));

        btnEditData.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        btnEditData.setIcon(new javax.swing.ImageIcon(getClass().getResource("/vn/tad_sebs/icon/Edit.png"))); // NOI18N
        btnEditData.setText("Chỉnh sửa");
        getContentPane().add(btnEditData, new org.netbeans.lib.awtextra.AbsoluteConstraints(1190, 260, -1, -1));

        btnClearData.setFont(new java.awt.Font("VnTimes", 1, 14)); // NOI18N
        btnClearData.setText("C");
        getContentPane().add(btnClearData, new org.netbeans.lib.awtextra.AbsoluteConstraints(1320, 260, -1, -1));
        getContentPane().add(jSeparator1, new org.netbeans.lib.awtextra.AbsoluteConstraints(990, 300, 370, 20));

        jLabel6.setIcon(new javax.swing.ImageIcon("D:\\FLCenter\\flcenter\\src\\main\\resources\\vn\\tad_sebs\\icon\\QLTL2.png")); // NOI18N
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1370, 670));

        setSize(new java.awt.Dimension(1376, 622));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

ImageIcon icon = new ImageIcon((getClass().getResource("/vn/tad_sebs/icon/icon.png")));
    private void FSearchDataActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FSearchDataActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_FSearchDataActionPerformed

    private void btnSearchDataActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchDataActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnSearchDataActionPerformed

    private void FAuthorSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FAuthorSearchActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_FAuthorSearchActionPerformed

    private void FSearchDataKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_FSearchDataKeyPressed
        if(evt.getKeyCode() == KeyEvent.VK_ENTER)
        {
            btnSearchData.doClick();
        }
    }//GEN-LAST:event_FSearchDataKeyPressed

    private String[] columnNamesData = new String[] {
            "ID", "Tên tài liệu", "Thể loại", "Tác giả"};

    public void showListData(List<Data> list) {
        int size = list.size();
        Object[][] data = new Object[size][4];
        for (int i = 0; i < size; i++) {
            data[i][0] = list.get(i).getId();
            data[i][1] = list.get(i).getName();
            data[i][2] = list.get(i).getCategory();
            data[i][3] = list.get(i).getAuthor();
        Datatable.setModel(new DefaultTableModel(data, columnNamesData));
    }
    }
    public void fillDataFromSelectedRow() {
        // lấy chỉ số của hàng được chọn
        int row = Datatable.getSelectedRow();
        if (row >= 0) {
            FIDSearchData.setText(Datatable.getModel().getValueAt(row, 0).toString());
            FNameSearchData.setText(Datatable.getModel().getValueAt(row, 1).toString());
            FCategorySearch.setText(Datatable.getModel().getValueAt(row, 2).toString());
            FAuthorSearch.setText(Datatable.getModel().getValueAt(row, 3).toString());
            // enable Edit and Delete buttons
            btnEditData.setEnabled(true);
            btnDeleteData.setEnabled(true);
            // disable Add button
            btnAddData.setEnabled(false);
        }
    }
    public void showData(Data data)
    {
        FIDSearchData.setText(String.valueOf(data.getId()));
        FNameSearchData.setText(data.getName());
        FCategorySearch.setText(data.getCategory());
        FAuthorSearch.setText(data.getAuthor());
        //enable Delete and edit button
        btnEditData.setEnabled(true);
        btnDeleteData.setEnabled(true);
        //disable Add button
        btnAddData.setEnabled(false);
    }
    public void clearDataInfo() {
        FIDSearchData.setText("");
        FNameSearchData.setText("");
        FCategorySearch.setText("");
        FAuthorSearch.setText("");
        // disable Edit and Delete buttons
        btnEditData.setEnabled(false);
        btnDeleteData.setEnabled(false);
        // enable Add button
        btnAddData.setEnabled(true);

        Datatable.clearSelection();
    }
    public void addAddDataListener(ActionListener listener) {
        btnAddData.addActionListener(listener);
    }

    public void addEditDataListener(ActionListener listener) {
        btnEditData.addActionListener(listener);
    }

    public void addDeleteDataListener(ActionListener listener) {
        btnDeleteData.addActionListener(listener);
    }

    public void addClearDataListener(ActionListener listener) {
        btnClearData.addActionListener(listener);
    }

    public void addListDataSelectionListener(ListSelectionListener listener) {
        Datatable.getSelectionModel().addListSelectionListener(listener);
    }

    public void addSearchDataListener(ActionListener listener) {
        btnSearchData.addActionListener(listener);
    }
    public void addSortDataByIDListener(ActionListener listener)
    {
       btnSortbyIDData.addActionListener(listener);
    }
    public void addSortDataByNameListener(ActionListener listener)
    {
        btnSortbyNameData.addActionListener(listener);
    }
    public String getDataSelectedText() {
        return CbbSearchData.getSelectedItem().toString();
    }
    
    public String getDataSearchBox()
    {
        return FSearchData.getText().trim();
    }
    

    public void showMessage(String message) {
        JOptionPane.showMessageDialog(this, message);
    }
    public Data getDataInfo()
    {
        if(!validateName() || !validateCategory() || !validateAuthor())
        {
            return null;
        }
        try
        {
            
            Data data = new Data();
            if(FIDSearchData.getText()!=null && !"".equals(FIDSearchData.getText()))
            {
                data.setId(Integer.parseInt(FIDSearchData.getText()));
            }

            data.setName(FNameSearchData.getText());
            data.setCategory(FCategorySearch.getText());
            data.setAuthor(FAuthorSearch.getText());
            return data;
        }
        catch (Exception ex)
        {
            ex.printStackTrace();
        }
        return null;
        
    }

    private boolean validateName()
    {
        if(FNameSearchData.getText().trim().equals(""))
        {
            FNameSearchData.requestFocus();
            showMessage("Tên tài liệu không được để trống");
            return false;
        }
        return true;
    }
    
    private boolean validateCategory()
    {
        if(FCategorySearch.getText().trim().equals(""))
        {
            FCategorySearch.requestFocus();
            showMessage("Thể loại không được để trống");
            return false;
        }
        return true;
    }

    private boolean validateAuthor()
    {
        if(FAuthorSearch.getText().trim().equals(""))
        {
            FAuthorSearch.requestFocus();
            showMessage("Tác giả không được để trống");
            return false;
        }
        return true;
    }

    public boolean validateID()
    {
        String searchBox = FSearchData.getText();
        try{
            int id = Integer.parseInt(searchBox);
            if(id < 0)
            {
                showMessage("ID không hợp lệ");
                return false;
            }
        }
        catch(NumberFormatException ex)
        {
            showMessage("ID không hợp lệ");
            return false;
        }
        return  true;
    }


    public String getCriteria()
    {
        return CbbSearchData.getSelectedItem().toString();
    }

    public String getSearchValue()
    {
        return FSearchData.getText().trim();
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> CbbSearchData;
    private javax.swing.JTable Datatable;
    private javax.swing.JTextField FAuthorSearch;
    private javax.swing.JTextField FCategorySearch;
    private javax.swing.JTextField FIDSearchData;
    private javax.swing.JTextField FNameSearchData;
    private javax.swing.JTextField FSearchData;
    private javax.swing.JButton btnAddData;
    private javax.swing.JButton btnClearData;
    private javax.swing.JButton btnDeleteData;
    private javax.swing.JButton btnEditData;
    private javax.swing.JButton btnSearchData;
    private javax.swing.JButton btnSortbyIDData;
    private javax.swing.JButton btnSortbyNameData;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    // End of variables declaration//GEN-END:variables
}

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package vn.tad_sebs.View;

import java.awt.event.ActionListener;
import java.awt.event.KeyEvent;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.DefaultTableModel;

import vn.tad_sebs.Controller.MainController;
import vn.tad_sebs.Model.Department;
import vn.tad_sebs.Model.Monhoc;

public class MonView extends javax.swing.JFrame {

    /**
     * Creates new form MonView
     */
    public MonView() {
        initComponents();
        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        btnEditMon.setEnabled(false);
        btnDeleteMon.setEnabled(false);

        this.addWindowListener(new java.awt.event.WindowAdapter() {
            @Override
            public void windowClosed(java.awt.event.WindowEvent windowEvent) {
                MainView mainView = new MainView();
                MainController mainController = new MainController(mainView);
                mainController.showMainView();
            }
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        Montable = new javax.swing.JTable();
        jSeparator1 = new javax.swing.JSeparator();
        FIDSearchMon = new javax.swing.JTextField();
        btnDeleteMon = new javax.swing.JButton();
        btnEditMon = new javax.swing.JButton();
        FNameSearchMon = new javax.swing.JTextField();
        FSoTietSearch = new javax.swing.JTextField();
        btnAddMon = new javax.swing.JButton();
        CbbSearchMon = new javax.swing.JComboBox<>();
        FSearchMon = new javax.swing.JTextField();
        btnSearchMon = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        btnClearMon = new javax.swing.JButton();
        btnSortbyidMon = new javax.swing.JButton();
        btnSortbyNameMon = new javax.swing.JButton();
        btnSortbyTinchi = new javax.swing.JButton();
        cbDpEdit = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("QUẢN LÝ MÔN HỌC");
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        Montable.setBackground(new java.awt.Color(174, 228, 255));
        Montable.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        Montable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Tên môn", "Số tiết", "Khoa"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        Montable.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        Montable.setShowGrid(false);
        Montable.setShowHorizontalLines(true);
        Montable.getTableHeader().setReorderingAllowed(false);
        Montable.setUpdateSelectionOnSort(false);
        jScrollPane1.setViewportView(Montable);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 62, 1010, 570));
        getContentPane().add(jSeparator1, new org.netbeans.lib.awtextra.AbsoluteConstraints(1010, 350, 390, 10));

        FIDSearchMon.setEnabled(false);
        FIDSearchMon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FIDSearchMonActionPerformed(evt);
            }
        });
        getContentPane().add(FIDSearchMon, new org.netbeans.lib.awtextra.AbsoluteConstraints(1190, 90, 170, -1));

        btnDeleteMon.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        btnDeleteMon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/vn/tad_sebs/icon/Delete.png"))); // NOI18N
        btnDeleteMon.setText("Xóa");
        btnDeleteMon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteMonActionPerformed(evt);
            }
        });
        getContentPane().add(btnDeleteMon, new org.netbeans.lib.awtextra.AbsoluteConstraints(1120, 310, 90, -1));

        btnEditMon.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        btnEditMon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/vn/tad_sebs/icon/Edit.png"))); // NOI18N
        btnEditMon.setText("Chỉnh sửa");
        btnEditMon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditMonActionPerformed(evt);
            }
        });
        getContentPane().add(btnEditMon, new org.netbeans.lib.awtextra.AbsoluteConstraints(1220, 310, -1, -1));
        getContentPane().add(FNameSearchMon, new org.netbeans.lib.awtextra.AbsoluteConstraints(1190, 140, 170, -1));
        getContentPane().add(FSoTietSearch, new org.netbeans.lib.awtextra.AbsoluteConstraints(1190, 190, 170, -1));

        btnAddMon.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        btnAddMon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/vn/tad_sebs/icon/Add.png"))); // NOI18N
        btnAddMon.setText("Thêm");
        getContentPane().add(btnAddMon, new org.netbeans.lib.awtextra.AbsoluteConstraints(1020, 310, -1, -1));

        CbbSearchMon.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        CbbSearchMon.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "ID", "Tên môn", "Số tiết", "Mã khoa" }));
        CbbSearchMon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CbbSearchMonActionPerformed(evt);
            }
        });
        getContentPane().add(CbbSearchMon, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 20, -1, 30));

        FSearchMon.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                FSearchMonKeyPressed(evt);
            }
        });
        getContentPane().add(FSearchMon, new org.netbeans.lib.awtextra.AbsoluteConstraints(185, 20, 140, 30));

        btnSearchMon.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        btnSearchMon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/vn/tad_sebs/icon/Find.png"))); // NOI18N
        btnSearchMon.setText("Tìm");
        btnSearchMon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchMonActionPerformed(evt);
            }
        });
        getContentPane().add(btnSearchMon, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 20, -1, -1));

        jLabel2.setBackground(new java.awt.Color(102, 255, 102));
        jLabel2.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(51, 255, 73));
        jLabel2.setText("ID");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(1080, 90, 51, -1));

        jLabel4.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(51, 255, 73));
        jLabel4.setText("Số tiết");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(1080, 190, 56, -1));

        jLabel5.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(51, 255, 73));
        jLabel5.setText("Khoa");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(1080, 240, 56, -1));

        jLabel12.setBackground(new java.awt.Color(105, 202, 105));
        jLabel12.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(51, 255, 73));
        jLabel12.setText("Tên môn");
        getContentPane().add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(1080, 140, 80, -1));

        btnClearMon.setFont(new java.awt.Font("VnTimes", 1, 14)); // NOI18N
        btnClearMon.setText("C");
        getContentPane().add(btnClearMon, new org.netbeans.lib.awtextra.AbsoluteConstraints(1350, 310, 30, -1));

        btnSortbyidMon.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        btnSortbyidMon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/vn/tad_sebs/icon/Sort.png"))); // NOI18N
        btnSortbyidMon.setText("Sắp xếp theo ID");
        btnSortbyidMon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSortbyidMonActionPerformed(evt);
            }
        });
        getContentPane().add(btnSortbyidMon, new org.netbeans.lib.awtextra.AbsoluteConstraints(1050, 450, 180, 60));

        btnSortbyNameMon.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        btnSortbyNameMon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/vn/tad_sebs/icon/Sort.png"))); // NOI18N
        btnSortbyNameMon.setText("Sắp xếp theo Tên");
        getContentPane().add(btnSortbyNameMon, new org.netbeans.lib.awtextra.AbsoluteConstraints(1050, 360, 180, 60));

        btnSortbyTinchi.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        btnSortbyTinchi.setIcon(new javax.swing.ImageIcon(getClass().getResource("/vn/tad_sebs/icon/Sort.png"))); // NOI18N
        btnSortbyTinchi.setText("Sắp xếp theo Số tiết");
        getContentPane().add(btnSortbyTinchi, new org.netbeans.lib.awtextra.AbsoluteConstraints(1050, 550, 180, 60));

        cbDpEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbDpEditActionPerformed(evt);
            }
        });
        getContentPane().add(cbDpEdit, new org.netbeans.lib.awtextra.AbsoluteConstraints(1190, 240, 170, -1));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/vn/tad_sebs/icon/QLMH2.png"))); // NOI18N
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1400, 670));

        setSize(new java.awt.Dimension(1404, 676));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents


    private void FIDSearchMonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FIDSearchMonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_FIDSearchMonActionPerformed

    private void btnDeleteMonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteMonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnDeleteMonActionPerformed

    private void btnEditMonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditMonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnEditMonActionPerformed

    private void btnSearchMonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchMonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnSearchMonActionPerformed

    private void cbDpEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbDpEditActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbDpEditActionPerformed

    private void btnSortbyidMonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSortbyidMonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnSortbyidMonActionPerformed

    private void CbbSearchMonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CbbSearchMonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_CbbSearchMonActionPerformed

    private void FSearchMonKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_FSearchMonKeyPressed
        if(evt.getKeyCode() == KeyEvent.VK_ENTER)
        {
            btnSearchMon.doClick();
        }
    }//GEN-LAST:event_FSearchMonKeyPressed
    private String[] columnNamesMon = new String[] {
            "ID", "Tên môn", "Số tiết", "Khoa"};

    public void showListMon(List<Monhoc> list) {
        int size = list.size();
        Object[][] mon = new Object[size][4];
        for (int i = 0; i < size; i++) {
            mon[i][0] = list.get(i).getId();
            mon[i][1] = list.get(i).getName();
            mon[i][2] = list.get(i).getTinchi();
            mon[i][3] = list.get(i).getKhoa();
        }
        Montable.setModel(new DefaultTableModel(mon, columnNamesMon));
    }

    public void fillMonFromSelectedRow() {
        // lấy chỉ số của hàng được chọn
        int row = Montable.getSelectedRow();
        if (row >= 0) {
            FIDSearchMon.setText(Montable.getModel().getValueAt(row, 0).toString());
            FNameSearchMon.setText(Montable.getModel().getValueAt(row, 1).toString());
            FSoTietSearch.setText(Montable.getModel().getValueAt(row, 2).toString());
            cbDpEdit.setSelectedIndex(Integer.parseInt(Montable.getModel().getValueAt(row, 3).toString())-1);
            
            // enable Edit and Delete buttons
            btnEditMon.setEnabled(true);
            btnDeleteMon.setEnabled(true);
            // disable Add button
            btnAddMon.setEnabled(false);
        }
    }
    public void showMon(Monhoc mon)
    {
        FIDSearchMon.setText(String.valueOf(mon.getId()));
        FNameSearchMon.setText(mon.getName());
        FSoTietSearch.setText(String.valueOf(mon.getTinchi()));
        cbDpEdit.setSelectedIndex(mon.getKhoa() - 1);
        
        //enable Delete and edit button
        btnEditMon.setEnabled(true);
        btnDeleteMon.setEnabled(true);
        //disable Add button
        btnAddMon.setEnabled(false);
    }

    public void clearMonInfo() {
        FIDSearchMon.setText("");
        FNameSearchMon.setText("");
        FSoTietSearch.setText("");
        cbDpEdit.setSelectedIndex(0);
        
        // disable Edit and Delete buttons
        btnEditMon.setEnabled(false);
        btnDeleteMon.setEnabled(false);
        // enable Add button
        btnAddMon.setEnabled(true);

        Montable.clearSelection();
    }

    public void addAddMonListener(ActionListener listener) {
        btnAddMon.addActionListener(listener);
    }

    public void addEditMonListener(ActionListener listener) {
        btnEditMon.addActionListener(listener);
    }

    public void addDeleteMonListener(ActionListener listener) {
        btnDeleteMon.addActionListener(listener);
    }

    public void addClearMonListener(ActionListener listener) {
        btnClearMon.addActionListener(listener);
    }

    public void addListMonSelectionListener(ListSelectionListener listener) {
      Montable.getSelectionModel().addListSelectionListener(listener);
    }

    public void addSearchMonListener(ActionListener listener) {
        btnSearchMon.addActionListener(listener);
    }
    public void addSortMonByIDListener(ActionListener listener)
    {
        btnSortbyidMon.addActionListener(listener);
    }
    public void addSortMonByNameListener(ActionListener listener)
    {
        btnSortbyNameMon.addActionListener(listener);
    }
    public void addSortMonByTinchiListener(ActionListener listener)
    {
        btnSortbyTinchi.addActionListener(listener);
    }
    


    public String getSelectedText() {
        return CbbSearchMon.getSelectedItem().toString();
    }
    
    public String getSearchBox()
    {
        return FSearchMon.getText().trim();
    }
    

    public void showMessage(String message) {
        JOptionPane.showMessageDialog(this, message);
    }
    public Monhoc getMonInfo()
    {
        if(!validateName() || !validateSoTiet())
        {
            return null;
        }
        try
        {
            
            Monhoc mon = new Monhoc();
            if(FIDSearchMon.getText()!=null && !"".equals(FIDSearchMon.getText()))
            {
                mon.setId(Integer.parseInt(FIDSearchMon.getText()));
            }

            mon.setName(FNameSearchMon.getText());
            mon.setTinchi(Integer.parseInt(FSoTietSearch.getText()));
            mon.setKhoa(cbDpEdit.getSelectedIndex()+ 1);
            
            return mon;
        }
        catch (Exception ex)
        {
            ex.printStackTrace();
        }
        return null;
        
    }

    private boolean validateName()
    {
        String name = FNameSearchMon.getText();
        if(name == null || "".equals(name))
        {
            FNameSearchMon.requestFocus();
            showMessage("Tên môn không được để trống");
            return false;
        }
        return true;
    }

    private boolean validateSoTiet()
    {
        String soTiet = FSoTietSearch.getText();
        if(soTiet == null || "".equals(soTiet))
        {
            FSoTietSearch.requestFocus();
            showMessage("Số tiết không được để trống");
            return false;
        }
        try
        {
            int soTietInt = Integer.parseInt(soTiet);
            if(soTietInt <= 0)
            {
                FSoTietSearch.requestFocus();
                showMessage("Số tiết phải lớn hơn 0");
                return false;
            }
        }
        catch (Exception ex)
        {
            FSoTietSearch.requestFocus();
            showMessage("Số tiết phải là số nguyên");
            return false;
        }
        return true;
    }


    public void showListDP(List<Department> list)
    {
        int size = list.size();
        Object[][] departments = new Object[size][3];
        for (int i = 0; i < size; i++) {
            cbDpEdit.addItem(list.get(i).getId() + " - " + list.get(i).getName());
        }
    }
    public boolean validateID()
    {
        String searchBox = FSearchMon.getText();
        try
        {
            int id = Integer.parseInt(searchBox);
            if(id <= 0)
            {
                showMessage("ID không hợp lệ");
                return false;
            }
        }
        catch (Exception ex)
        {
            showMessage("ID không hợp lệ");
            return false;
        }
        return true;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> CbbSearchMon;
    private javax.swing.JTextField FIDSearchMon;
    private javax.swing.JTextField FNameSearchMon;
    private javax.swing.JTextField FSearchMon;
    private javax.swing.JTextField FSoTietSearch;
    private javax.swing.JTable Montable;
    private javax.swing.JButton btnAddMon;
    private javax.swing.JButton btnClearMon;
    private javax.swing.JButton btnDeleteMon;
    private javax.swing.JButton btnEditMon;
    private javax.swing.JButton btnSearchMon;
    private javax.swing.JButton btnSortbyNameMon;
    private javax.swing.JButton btnSortbyTinchi;
    private javax.swing.JButton btnSortbyidMon;
    private javax.swing.JComboBox<String> cbDpEdit;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    // End of variables declaration//GEN-END:variables
}

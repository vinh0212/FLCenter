/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package vn.tad_sebs.View;

import com.toedter.calendar.JDateChooser;
import java.awt.event.ActionListener;
import java.awt.event.KeyEvent;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.DefaultTableModel;

import vn.tad_sebs.Model.Department;
import vn.tad_sebs.Model.Lanhdao;
import vn.tad_sebs.Model.Teacher;

/**
 *
 * @author ASUS
 */
public class TeacherView extends javax.swing.JFrame {

    /**
     * Creates new form TeacherView
     */
    public TeacherView() {
        initComponents();
        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        btnEditLD.setEnabled(false);
        btnDeleteLD.setEnabled(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        BtnDeleteStudent = new javax.swing.JButton();
        FClassSearchStudent = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        BtnEditStudent = new javax.swing.JButton();
        FSexStudent = new javax.swing.JTextField();
        BtnAddStudent = new javax.swing.JButton();
        BtnClearStudent = new javax.swing.JButton();
        jLabel12 = new javax.swing.JLabel();
        FAddressSearchStudent = new javax.swing.JTextField();
        FNameSearchStudent = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        FDateSearchStudent = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        FIDSearchStudent = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        FTeacherSearchStudent = new javax.swing.JTextField();
        FScoreSearchStudent = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        jTabbedPane4 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        LDtable = new javax.swing.JTable();
        CbbSeacrchLD = new javax.swing.JComboBox<>();
        FSearchLD = new javax.swing.JTextField();
        btnSearchLD = new javax.swing.JButton();
        btnSortbyidLD = new javax.swing.JButton();
        btnSortbyNameLD = new javax.swing.JButton();
        btnSortbyLevelLD = new javax.swing.JButton();
        btnEditLD = new javax.swing.JButton();
        FNameSearchLD = new javax.swing.JTextField();
        FAddressSearchLD = new javax.swing.JTextField();
        btnAddLD = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        FLevelSearchLD = new javax.swing.JTextField();
        FRoleSearchLD = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        btnClearLD = new javax.swing.JButton();
        FIDSearchLD = new javax.swing.JTextField();
        btnDeleteLD = new javax.swing.JButton();
        btnSortbyRole = new javax.swing.JButton();
        FDateSearchLD = new com.toedter.calendar.JDateChooser();
        CbMLD = new javax.swing.JCheckBox();
        CbFLD = new javax.swing.JCheckBox();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel1 = new javax.swing.JLabel();
        jLabel26 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        GVtable = new javax.swing.JTable();
        FLevelSearchGV = new javax.swing.JTextField();
        FAddressSearchGV = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        btnSortbyidGV = new javax.swing.JButton();
        FRoleSearchGV = new javax.swing.JTextField();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        btnAddGV = new javax.swing.JButton();
        btnEditGV = new javax.swing.JButton();
        CbbSeacrchGV = new javax.swing.JComboBox<>();
        FNameSearchGV = new javax.swing.JTextField();
        btnSearchGV = new javax.swing.JButton();
        btnSortbyNameGV = new javax.swing.JButton();
        jLabel22 = new javax.swing.JLabel();
        btnSortbyLevelGV = new javax.swing.JButton();
        FSearchGV = new javax.swing.JTextField();
        FIDSearchGV = new javax.swing.JTextField();
        jLabel23 = new javax.swing.JLabel();
        btnClearGV = new javax.swing.JButton();
        btnDeleteGV = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jLabel24 = new javax.swing.JLabel();
        cbDpChoose = new javax.swing.JComboBox<>();
        jLabel25 = new javax.swing.JLabel();
        cbDpEdit = new javax.swing.JComboBox<>();
        FDateSearchGV = new com.toedter.calendar.JDateChooser();
        CbMGV = new javax.swing.JCheckBox();
        CbFGV = new javax.swing.JCheckBox();
        jSeparator2 = new javax.swing.JSeparator();
        jLabel28 = new javax.swing.JLabel();

        BtnDeleteStudent.setText("Xóa");
        BtnDeleteStudent.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnDeleteStudentActionPerformed(evt);
            }
        });

        jLabel7.setText("Lớp");

        jLabel4.setText("Ngày sinh");

        BtnEditStudent.setText("Chỉnh sửa");
        BtnEditStudent.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnEditStudentActionPerformed(evt);
            }
        });

        BtnAddStudent.setText("Thêm");

        BtnClearStudent.setText("Clear");

        jLabel12.setText("Họ và tên");

        FAddressSearchStudent.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FAddressSearchStudentActionPerformed(evt);
            }
        });

        jLabel2.setText("ID");

        jLabel6.setText("Quê quán");

        jLabel9.setText("Điểm");

        FIDSearchStudent.setEnabled(false);
        FIDSearchStudent.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FIDSearchStudentActionPerformed(evt);
            }
        });

        jLabel5.setText("Giới tính");

        FTeacherSearchStudent.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FTeacherSearchStudentActionPerformed(evt);
            }
        });

        jLabel17.setText("GVCN");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        jPanel1.setMinimumSize(new java.awt.Dimension(0, 0));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        LDtable.setBackground(new java.awt.Color(174, 228, 255));
        LDtable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "ID", "Họ và tên", "Ngày sinh", "Giới tính", "Quê quán", "Cấp bậc hàm", "Chức vụ"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(LDtable);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 66, 1000, 580));

        CbbSeacrchLD.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        CbbSeacrchLD.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "ID", "Tên", "Quê quán", "Giới tính", "Cấp bậc hàm" }));
        jPanel1.add(CbbSeacrchLD, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 20, -1, 30));

        FSearchLD.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                FSearchLDKeyPressed(evt);
            }
        });
        jPanel1.add(FSearchLD, new org.netbeans.lib.awtextra.AbsoluteConstraints(215, 20, 140, 30));

        btnSearchLD.setIcon(new javax.swing.ImageIcon(getClass().getResource("/vn/tad_sebs/icon/Find.png"))); // NOI18N
        btnSearchLD.setText("Tìm");
        btnSearchLD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchLDActionPerformed(evt);
            }
        });
        jPanel1.add(btnSearchLD, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 20, 80, -1));

        btnSortbyidLD.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        btnSortbyidLD.setIcon(new javax.swing.ImageIcon(getClass().getResource("/vn/tad_sebs/icon/Sort.png"))); // NOI18N
        btnSortbyidLD.setText("Sắp xếp theo ID");
        jPanel1.add(btnSortbyidLD, new org.netbeans.lib.awtextra.AbsoluteConstraints(1020, 590, 220, 50));

        btnSortbyNameLD.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        btnSortbyNameLD.setIcon(new javax.swing.ImageIcon(getClass().getResource("/vn/tad_sebs/icon/Sort.png"))); // NOI18N
        btnSortbyNameLD.setText("Sắp xếp theo tên");
        jPanel1.add(btnSortbyNameLD, new org.netbeans.lib.awtextra.AbsoluteConstraints(1020, 510, 220, 50));

        btnSortbyLevelLD.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        btnSortbyLevelLD.setIcon(new javax.swing.ImageIcon(getClass().getResource("/vn/tad_sebs/icon/Sort.png"))); // NOI18N
        btnSortbyLevelLD.setText("Sắp xếp theo Cấp bậc hàm");
        jPanel1.add(btnSortbyLevelLD, new org.netbeans.lib.awtextra.AbsoluteConstraints(1020, 440, 220, 50));

        btnEditLD.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        btnEditLD.setIcon(new javax.swing.ImageIcon(getClass().getResource("/vn/tad_sebs/icon/Edit.png"))); // NOI18N
        btnEditLD.setText("Chỉnh sửa");
        btnEditLD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditLDActionPerformed(evt);
            }
        });
        jPanel1.add(btnEditLD, new org.netbeans.lib.awtextra.AbsoluteConstraints(1220, 300, -1, -1));
        jPanel1.add(FNameSearchLD, new org.netbeans.lib.awtextra.AbsoluteConstraints(1140, 110, 176, 22));

        FAddressSearchLD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FAddressSearchLDActionPerformed(evt);
            }
        });
        jPanel1.add(FAddressSearchLD, new org.netbeans.lib.awtextra.AbsoluteConstraints(1140, 200, 176, -1));

        btnAddLD.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        btnAddLD.setIcon(new javax.swing.ImageIcon(getClass().getResource("/vn/tad_sebs/icon/Add.png"))); // NOI18N
        btnAddLD.setText("Thêm");
        btnAddLD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddLDActionPerformed(evt);
            }
        });
        jPanel1.add(btnAddLD, new org.netbeans.lib.awtextra.AbsoluteConstraints(1010, 300, 100, -1));

        jLabel3.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(51, 255, 73));
        jLabel3.setText("ID");
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(1030, 80, 51, -1));

        jLabel8.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(51, 255, 73));
        jLabel8.setText("Ngày sinh");
        jPanel1.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(1030, 140, 90, -1));

        jLabel10.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(51, 255, 73));
        jLabel10.setText("Giới tính");
        jPanel1.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(1030, 170, 70, -1));

        jLabel11.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(51, 255, 73));
        jLabel11.setText("Quê quán");
        jPanel1.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(1030, 200, 80, -1));
        jPanel1.add(FLevelSearchLD, new org.netbeans.lib.awtextra.AbsoluteConstraints(1140, 230, 176, -1));

        FRoleSearchLD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FRoleSearchLDActionPerformed(evt);
            }
        });
        jPanel1.add(FRoleSearchLD, new org.netbeans.lib.awtextra.AbsoluteConstraints(1140, 260, 176, -1));

        jLabel13.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(51, 255, 73));
        jLabel13.setText("Cấp bậc hàm");
        jPanel1.add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(1030, 230, -1, -1));

        jLabel15.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(51, 255, 73));
        jLabel15.setText("Họ và tên");
        jPanel1.add(jLabel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(1030, 110, 80, -1));

        jLabel18.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        jLabel18.setForeground(new java.awt.Color(51, 255, 73));
        jLabel18.setText("Chức vụ");
        jPanel1.add(jLabel18, new org.netbeans.lib.awtextra.AbsoluteConstraints(1030, 260, 70, -1));

        btnClearLD.setFont(new java.awt.Font("VnTimes", 1, 14)); // NOI18N
        btnClearLD.setText("C");
        jPanel1.add(btnClearLD, new org.netbeans.lib.awtextra.AbsoluteConstraints(1350, 300, 30, 30));

        FIDSearchLD.setEnabled(false);
        FIDSearchLD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FIDSearchLDActionPerformed(evt);
            }
        });
        jPanel1.add(FIDSearchLD, new org.netbeans.lib.awtextra.AbsoluteConstraints(1140, 80, 176, -1));

        btnDeleteLD.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        btnDeleteLD.setIcon(new javax.swing.ImageIcon(getClass().getResource("/vn/tad_sebs/icon/Delete.png"))); // NOI18N
        btnDeleteLD.setText("Xóa");
        btnDeleteLD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteLDActionPerformed(evt);
            }
        });
        jPanel1.add(btnDeleteLD, new org.netbeans.lib.awtextra.AbsoluteConstraints(1120, 300, 90, -1));

        btnSortbyRole.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        btnSortbyRole.setIcon(new javax.swing.ImageIcon(getClass().getResource("/vn/tad_sebs/icon/Sort.png"))); // NOI18N
        btnSortbyRole.setText("Sắp xếp theo Chức vụ");
        jPanel1.add(btnSortbyRole, new org.netbeans.lib.awtextra.AbsoluteConstraints(1020, 360, 220, 50));

        FDateSearchLD.setDateFormatString("dd/MM/yyyy");
        jPanel1.add(FDateSearchLD, new org.netbeans.lib.awtextra.AbsoluteConstraints(1140, 140, 176, -1));

        buttonGroup2.add(CbMLD);
        CbMLD.setSelected(true);
        CbMLD.setText("Nam");
        jPanel1.add(CbMLD, new org.netbeans.lib.awtextra.AbsoluteConstraints(1140, 170, 85, -1));

        buttonGroup2.add(CbFLD);
        CbFLD.setText("Nữ");
        jPanel1.add(CbFLD, new org.netbeans.lib.awtextra.AbsoluteConstraints(1230, 170, 85, -1));
        jPanel1.add(jSeparator1, new org.netbeans.lib.awtextra.AbsoluteConstraints(1000, 340, 400, 20));

        jLabel1.setIcon(new javax.swing.ImageIcon("D:\\FLCenter\\flcenter\\src\\main\\resources\\vn\\tad_sebs\\icon\\QLCB2.png")); // NOI18N
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(-12, 0, 1400, 680));

        jLabel26.setText("jLabel26");
        jPanel1.add(jLabel26, new org.netbeans.lib.awtextra.AbsoluteConstraints(1270, 20, -1, -1));

        jTabbedPane4.addTab("Lãnh đạo", jPanel1);

        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        GVtable.setBackground(new java.awt.Color(174, 228, 255));
        GVtable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Họ và tên", "Ngày sinh", "Giới tính", "Quê quán", "Cấp bậc hàm", "Môn giảng dạy", "Lớp phụ trách", "Phòng ban"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(GVtable);

        jPanel2.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 62, 1020, 580));
        jPanel2.add(FLevelSearchGV, new org.netbeans.lib.awtextra.AbsoluteConstraints(1200, 350, 172, -1));

        FAddressSearchGV.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FAddressSearchGVActionPerformed(evt);
            }
        });
        jPanel2.add(FAddressSearchGV, new org.netbeans.lib.awtextra.AbsoluteConstraints(1200, 310, 172, -1));

        jLabel14.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(51, 255, 73));
        jLabel14.setText("ID");
        jPanel2.add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(1070, 140, 51, -1));

        jLabel16.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        jLabel16.setForeground(new java.awt.Color(51, 255, 73));
        jLabel16.setText("Ngày sinh");
        jPanel2.add(jLabel16, new org.netbeans.lib.awtextra.AbsoluteConstraints(1070, 220, 100, -1));

        btnSortbyidGV.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        btnSortbyidGV.setIcon(new javax.swing.ImageIcon(getClass().getResource("/vn/tad_sebs/icon/Sort.png"))); // NOI18N
        btnSortbyidGV.setText("Sắp xếp theo ID");
        jPanel2.add(btnSortbyidGV, new org.netbeans.lib.awtextra.AbsoluteConstraints(1040, 540, 220, -1));

        FRoleSearchGV.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FRoleSearchGVActionPerformed(evt);
            }
        });
        jPanel2.add(FRoleSearchGV, new org.netbeans.lib.awtextra.AbsoluteConstraints(1200, 400, 172, -1));

        jLabel19.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        jLabel19.setForeground(new java.awt.Color(51, 255, 73));
        jLabel19.setText("Họ và tên");
        jPanel2.add(jLabel19, new org.netbeans.lib.awtextra.AbsoluteConstraints(1070, 180, 80, -1));

        jLabel20.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        jLabel20.setForeground(new java.awt.Color(51, 255, 73));
        jLabel20.setText("Cấp bậc hàm");
        jPanel2.add(jLabel20, new org.netbeans.lib.awtextra.AbsoluteConstraints(1070, 350, 110, -1));

        jLabel21.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        jLabel21.setForeground(new java.awt.Color(51, 255, 73));
        jLabel21.setText("Giới tính");
        jPanel2.add(jLabel21, new org.netbeans.lib.awtextra.AbsoluteConstraints(1070, 260, 80, -1));

        btnAddGV.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        btnAddGV.setIcon(new javax.swing.ImageIcon(getClass().getResource("/vn/tad_sebs/icon/Add.png"))); // NOI18N
        btnAddGV.setText("Thêm");
        jPanel2.add(btnAddGV, new org.netbeans.lib.awtextra.AbsoluteConstraints(1038, 500, 90, -1));

        btnEditGV.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        btnEditGV.setIcon(new javax.swing.ImageIcon(getClass().getResource("/vn/tad_sebs/icon/Edit.png"))); // NOI18N
        btnEditGV.setText("Chỉnh sửa");
        btnEditGV.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditGVActionPerformed(evt);
            }
        });
        jPanel2.add(btnEditGV, new org.netbeans.lib.awtextra.AbsoluteConstraints(1230, 500, -1, -1));

        CbbSeacrchGV.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        CbbSeacrchGV.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "ID", "Tên", "Quê quán", "Giới tính", "Cấp bậc hàm", "Môn giảng dạy", "Lớp phụ trách" }));
        CbbSeacrchGV.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CbbSeacrchGVActionPerformed(evt);
            }
        });
        jPanel2.add(CbbSeacrchGV, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 20, -1, 30));
        jPanel2.add(FNameSearchGV, new org.netbeans.lib.awtextra.AbsoluteConstraints(1200, 180, 172, -1));

        btnSearchGV.setIcon(new javax.swing.ImageIcon(getClass().getResource("/vn/tad_sebs/icon/Find.png"))); // NOI18N
        btnSearchGV.setText("Tìm");
        btnSearchGV.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchGVActionPerformed(evt);
            }
        });
        jPanel2.add(btnSearchGV, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 20, 80, -1));

        btnSortbyNameGV.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        btnSortbyNameGV.setIcon(new javax.swing.ImageIcon(getClass().getResource("/vn/tad_sebs/icon/Sort.png"))); // NOI18N
        btnSortbyNameGV.setText("Sắp xếp theo tên");
        jPanel2.add(btnSortbyNameGV, new org.netbeans.lib.awtextra.AbsoluteConstraints(1040, 580, 220, -1));

        jLabel22.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        jLabel22.setForeground(new java.awt.Color(51, 255, 73));
        jLabel22.setText("Quê quán");
        jPanel2.add(jLabel22, new org.netbeans.lib.awtextra.AbsoluteConstraints(1070, 310, 80, -1));

        btnSortbyLevelGV.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        btnSortbyLevelGV.setIcon(new javax.swing.ImageIcon(getClass().getResource("/vn/tad_sebs/icon/Sort.png"))); // NOI18N
        btnSortbyLevelGV.setText("Sắp xếp theo Cấp bậc hàm");
        jPanel2.add(btnSortbyLevelGV, new org.netbeans.lib.awtextra.AbsoluteConstraints(1040, 620, 220, -1));

        FSearchGV.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                FSearchGVKeyPressed(evt);
            }
        });
        jPanel2.add(FSearchGV, new org.netbeans.lib.awtextra.AbsoluteConstraints(245, 20, 140, 30));

        FIDSearchGV.setEnabled(false);
        FIDSearchGV.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FIDSearchGVActionPerformed(evt);
            }
        });
        jPanel2.add(FIDSearchGV, new org.netbeans.lib.awtextra.AbsoluteConstraints(1200, 140, 172, -1));

        jLabel23.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        jLabel23.setForeground(new java.awt.Color(51, 255, 73));
        jLabel23.setText("Môn giảng dạy");
        jPanel2.add(jLabel23, new org.netbeans.lib.awtextra.AbsoluteConstraints(1070, 400, -1, -1));

        btnClearGV.setFont(new java.awt.Font("VnTimes", 1, 14)); // NOI18N
        btnClearGV.setText("C");
        jPanel2.add(btnClearGV, new org.netbeans.lib.awtextra.AbsoluteConstraints(1350, 500, 30, -1));

        btnDeleteGV.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        btnDeleteGV.setIcon(new javax.swing.ImageIcon(getClass().getResource("/vn/tad_sebs/icon/Delete.png"))); // NOI18N
        btnDeleteGV.setText("Xóa");
        btnDeleteGV.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteGVActionPerformed(evt);
            }
        });
        jPanel2.add(btnDeleteGV, new org.netbeans.lib.awtextra.AbsoluteConstraints(1140, 500, 80, -1));

        jPanel3.setBackground(new java.awt.Color(174, 228, 255));
        jPanel3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel24.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        jLabel24.setText("Chọn phòng ban:");

        cbDpChoose.setToolTipText("");
        cbDpChoose.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbDpChooseActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel24))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addComponent(cbDpChoose, javax.swing.GroupLayout.PREFERRED_SIZE, 218, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(24, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(jLabel24)
                .addGap(18, 18, 18)
                .addComponent(cbDpChoose, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(15, Short.MAX_VALUE))
        );

        jPanel2.add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(1100, 10, -1, 120));

        jLabel25.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        jLabel25.setForeground(new java.awt.Color(51, 255, 73));
        jLabel25.setText("Phòng ban");
        jPanel2.add(jLabel25, new org.netbeans.lib.awtextra.AbsoluteConstraints(1070, 450, -1, -1));

        jPanel2.add(cbDpEdit, new org.netbeans.lib.awtextra.AbsoluteConstraints(1200, 450, 172, -1));

        FDateSearchGV.setDateFormatString("dd/MM/yyyy");
        jPanel2.add(FDateSearchGV, new org.netbeans.lib.awtextra.AbsoluteConstraints(1200, 220, 172, -1));

        buttonGroup1.add(CbMGV);
        CbMGV.setSelected(true);
        CbMGV.setText("Nam");
        jPanel2.add(CbMGV, new org.netbeans.lib.awtextra.AbsoluteConstraints(1200, 260, 85, -1));

        buttonGroup1.add(CbFGV);
        CbFGV.setText("Nữ");
        jPanel2.add(CbFGV, new org.netbeans.lib.awtextra.AbsoluteConstraints(1300, 260, 75, -1));
        jPanel2.add(jSeparator2, new org.netbeans.lib.awtextra.AbsoluteConstraints(1020, 530, 370, 30));

        jLabel28.setIcon(new javax.swing.ImageIcon("D:\\FLCenter\\flcenter\\src\\main\\resources\\vn\\tad_sebs\\icon\\QLCB2.png")); // NOI18N
        jPanel2.add(jLabel28, new org.netbeans.lib.awtextra.AbsoluteConstraints(-5, -40, 1390, 720));

        jTabbedPane4.addTab("Giảng viên", jPanel2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jTabbedPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 1384, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(16, 16, 16))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane4, javax.swing.GroupLayout.Alignment.TRAILING)
        );

        jTabbedPane4.getAccessibleContext().setAccessibleName("Lãnh đạo");

        setSize(new java.awt.Dimension(1404, 717));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void FTeacherSearchStudentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FTeacherSearchStudentActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_FTeacherSearchStudentActionPerformed

    private void FAddressSearchStudentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FAddressSearchStudentActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_FAddressSearchStudentActionPerformed

    private void FIDSearchStudentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FIDSearchStudentActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_FIDSearchStudentActionPerformed

    private void BtnDeleteStudentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnDeleteStudentActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_BtnDeleteStudentActionPerformed

    private void BtnEditStudentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnEditStudentActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_BtnEditStudentActionPerformed

    private void btnSearchLDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchLDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnSearchLDActionPerformed

    private void btnEditLDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditLDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnEditLDActionPerformed

    private void FAddressSearchLDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FAddressSearchLDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_FAddressSearchLDActionPerformed

    private void FRoleSearchLDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FRoleSearchLDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_FRoleSearchLDActionPerformed

    private void FIDSearchLDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FIDSearchLDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_FIDSearchLDActionPerformed

    private void btnDeleteLDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteLDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnDeleteLDActionPerformed

    private void FAddressSearchGVActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FAddressSearchGVActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_FAddressSearchGVActionPerformed

    private void FRoleSearchGVActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FRoleSearchGVActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_FRoleSearchGVActionPerformed

    private void btnEditGVActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditGVActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnEditGVActionPerformed

    private void btnSearchGVActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchGVActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnSearchGVActionPerformed

    private void FIDSearchGVActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FIDSearchGVActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_FIDSearchGVActionPerformed

    private void btnDeleteGVActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteGVActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnDeleteGVActionPerformed

    private void CbbSeacrchGVActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CbbSeacrchGVActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_CbbSeacrchGVActionPerformed

    private void btnAddLDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddLDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnAddLDActionPerformed

    private void cbDpChooseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbDpChooseActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbDpChooseActionPerformed

    private void FSearchGVKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_FSearchGVKeyPressed
        if(evt.getKeyCode() == KeyEvent.VK_ENTER)
        {
            btnSearchGV.doClick();
        }
    }//GEN-LAST:event_FSearchGVKeyPressed

    private void FSearchLDKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_FSearchLDKeyPressed
        if(evt.getKeyCode() == KeyEvent.VK_ENTER)
        {
            btnSearchLD.doClick();
        }
    }//GEN-LAST:event_FSearchLDKeyPressed
    private String[] columnNamesGV = new String[] {
            "ID", "Họ và tên ", "Ngày sinh", "Giới tính", "Quê quán", "Cấp bậc hàm", "Môn giảng dạy", "Phòng ban" };
    public void showListGV(List<Teacher> list) {
        int size = list.size();
        Object[][] teachers = new Object[size][8];
        for (int i = 0; i < size; i++) {
            teachers[i][0] = list.get(i).getId();
            teachers[i][1] = list.get(i).getName();
            teachers[i][2] = list.get(i).getDate();
            teachers[i][3] = list.get(i).getSex();
            teachers[i][4] = list.get(i).getAddress();
            teachers[i][5] = list.get(i).getCapbacham();
            teachers[i][6] = list.get(i).getMon();
            
            teachers[i][7] = list.get(i).getDp();
        }
        GVtable.setModel(new DefaultTableModel(teachers, columnNamesGV));
    }
    public void fillGVFromSelectedRow() {
        // lấy chỉ số của hàng được chọn
        int row = GVtable.getSelectedRow();
        if (row >= 0) {
            FIDSearchGV.setText(GVtable.getModel().getValueAt(row, 0).toString());
            FNameSearchGV.setText(GVtable.getModel().getValueAt(row, 1).toString());
            String dateString = GVtable.getModel().getValueAt(row, 2).toString(); 
            // Chuỗi ngày tháng cần chuyển đổi
            JDateChooser dateChooser = new JDateChooser();

            // Định dạng của chuỗi ngày tháng
            SimpleDateFormat dateFormat = new SimpleDateFormat("dd/MM/yyyy");

            try {
                // Chuyển đổi chuỗi thành đối tượng Date
                Date date = dateFormat.parse(dateString);

                // Thiết lập ngày cho JDateChooser
                FDateSearchGV.setDate(date);
            } catch (ParseException e) {
                e.printStackTrace();
            }
            if ("Nam".equals(GVtable.getModel().getValueAt(row, 3).toString())) {
                CbMGV.setSelected(true);
            } else
                CbFGV.setSelected(true);
            FAddressSearchGV.setText(GVtable.getModel().getValueAt(row, 4).toString());
            FLevelSearchGV.setText(GVtable.getModel().getValueAt(row, 5).toString());
            FRoleSearchGV.setText(GVtable.getModel().getValueAt(row, 6).toString());
            cbDpEdit.setSelectedIndex(Integer.parseInt(GVtable.getModel().getValueAt(row, 7).toString())-1);
            // enable Edit and Delete buttons
            btnEditGV.setEnabled(true);
            btnDeleteGV.setEnabled(true);
            // disable Add button
            btnAddGV.setEnabled(false);
        }
    }
    public void showGV(Teacher teacher)
    {
        FIDSearchGV.setText(String.valueOf(teacher.getId()));
        FNameSearchGV.setText(teacher.getName());
         String dateString = teacher.getDate();
        SimpleDateFormat dateFormat = new SimpleDateFormat("dd/MM/yyyy");

        try {
            // Chuyển đổi chuỗi thành đối tượng Date
            Date date = dateFormat.parse(dateString);

            // Thiết lập ngày cho JDateChooser
            FDateSearchGV.setDate(date);
        } catch (ParseException e) {
            e.printStackTrace();
        }

        if (teacher.getSex() == "Nam") {
            CbMGV.setSelected(true);
        } else
            CbFGV.setSelected(true);
        FAddressSearchGV.setText(teacher.getAddress());
        FLevelSearchGV.setText(teacher.getCapbacham());
        FRoleSearchGV.setText(teacher.getMon());
        
        cbDpEdit.setSelectedIndex(teacher.getDp()-1);
        //enable Delete and edit button
        btnEditGV.setEnabled(true);
        btnDeleteGV.setEnabled(true);
        //disable Add button
        btnAddGV.setEnabled(false);
    }
    public void clearGVInfo() {
        FIDSearchGV.setText("");
        FNameSearchGV.setText("");
        String dateString = "01/01/2024"; // Chuỗi ngày tháng cần chuyển đổi
        JDateChooser dateChooser = new JDateChooser();

        // Định dạng của chuỗi ngày tháng
        SimpleDateFormat dateFormat = new SimpleDateFormat("dd/MM/yyyy");

        try {
            // Chuyển đổi chuỗi thành đối tượng Date
            Date date = dateFormat.parse(dateString);

            // Thiết lập ngày cho JDateChooser
            FDateSearchGV.setDate(date);
        } catch (ParseException e) {
            e.printStackTrace();
        }
        CbMGV.setSelected(true);
        FAddressSearchGV.setText("");
        
        FLevelSearchGV.setText("");
        FRoleSearchGV.setText("");
        cbDpEdit.setSelectedIndex(0);
        // disable Edit and Delete buttons
        btnEditGV.setEnabled(false);
        btnDeleteGV.setEnabled(false);
        // enable Add button
        btnAddGV.setEnabled(true);

        GVtable.clearSelection();
    }
     public String getSelectedTextGV() {
        return CbbSeacrchGV.getSelectedItem().toString();
    }
    
    public String getSearchBoxGV()
    {
        return FSearchGV.getText().trim();
    }
    public void showMessage(String message) {
        JOptionPane.showMessageDialog(this, message);
    }

    public void addAddGVListener(ActionListener listener) {
        btnAddGV.addActionListener(listener);
    }
    public Teacher getGVInfo()
    {
        if(!validateGVName() || !validateGVAddress() || !validateGVCapbacham() || !validateGVRole())
        {
            return null;
        }
        try
        {
            
            Teacher teacher = new Teacher();
            if(FIDSearchGV.getText()!=null && !"".equals(FIDSearchGV.getText()))
            {
                teacher.setId(Integer.parseInt(FIDSearchGV.getText()));
            }

            teacher.setName(FNameSearchGV.getText());
            SimpleDateFormat dateFormat = new SimpleDateFormat("dd/MM/yyyy");
            teacher.setDate(dateFormat.format(FDateSearchGV.getDate()));

            if(CbMGV.isSelected() == true)
                teacher.setSex("Nam");
            else
                teacher.setSex("Nữ");
            teacher.setAddress(FAddressSearchGV.getText());
            teacher.setCapbacham(FLevelSearchGV.getText());
            teacher.setMon(FRoleSearchGV.getText());
            
            teacher.setDp(cbDpEdit.getSelectedIndex() + 1);
            return teacher;
        }
        catch (Exception ex)
        {
            ex.printStackTrace();
        }
        return null;
        
    }

    private boolean validateGVName()
    {
        String name = FNameSearchGV.getText();
        if(name == null || "".equals(name))
        {
            FNameSearchGV.requestFocus();
            showMessage("Tên không được để trống");
            return false;
        }
        return true;
    }

    private boolean validateGVAddress()
    {
        String address = FAddressSearchGV.getText();
        if(address == null || "".equals(address))
        {
            FAddressSearchGV.requestFocus();
            showMessage("Quê quán không được để trống");
            return false;
        }
        return true;
    }

    private boolean validateGVCapbacham()
    {
        String capbacham = FLevelSearchGV.getText();
        if(capbacham == null || "".equals(capbacham))
        {
            FLevelSearchGV.requestFocus();
            showMessage("Cấp bậc hàm không được để trống");
            return false;
        }
        return true;
    }

    private boolean validateGVRole()
    {
        String role = FRoleSearchGV.getText();
        if(role == null || "".equals(role))
        {
            FRoleSearchGV.requestFocus();
            showMessage("Môn giảng dạy không được để trống");
            return false;
        }
        return true;
    }
    public void addEditGVListener(ActionListener listener) {
        btnEditGV.addActionListener(listener);
    }

    public void addDeleteGVListener(ActionListener listener) {
        btnDeleteGV.addActionListener(listener);
    }

    public void addClearGVListener(ActionListener listener) {
        btnClearGV.addActionListener(listener);
    }

    public void addListGVSelectionListener(ListSelectionListener listener) {
        GVtable.getSelectionModel().addListSelectionListener(listener);
    }

    public void addSearchGVListener(ActionListener listener) {
        btnSearchGV.addActionListener(listener);
    }
    public void addSortGVByIDListener(ActionListener listener)
    {
        btnSortbyidGV.addActionListener(listener);
    }
    public void addSortGVByNameListener(ActionListener listener)
    {
        btnSortbyNameGV.addActionListener(listener);
    }
      public void addSortGVByLevelListener(ActionListener listener)
    {
        btnSortbyLevelGV.addActionListener(listener);
    }
    public void addListDPSelectionListener(ActionListener listener)
    {
        cbDpChoose.addActionListener(listener);
    }

    public void showListDP(List<Department> list)
    {
        int size = list.size();
        Object[][] departments = new Object[size][3];
        for (int i = 0; i < size; i++) {
            cbDpChoose.addItem(list.get(i).getId() + " - " + list.get(i).getName());
            cbDpEdit.addItem(list.get(i).getId() + " - " + list.get(i).getName());
        }
    }
    public int getDPChoice()
    {
        return cbDpChoose.getSelectedIndex() + 1;
    }
    // ----- Lanh Dao

    private String[] columnNamesLD = new String[] { 
            "ID", "Họ và tên ", "Ngày sinh", "Giới tính", "Quê quán", "Cấp bậc hàm", "Chức vụ" };
    public void showListLD(List<Lanhdao> list) {
        int size = list.size();
        Object[][] lanhdao = new Object[size][7];
        for (int i = 0; i < size; i++) {
            lanhdao[i][0] = list.get(i).getId();
            lanhdao[i][1] = list.get(i).getName();
            lanhdao[i][2] = list.get(i).getDate();
            lanhdao[i][3] = list.get(i).getSex();
            lanhdao[i][4] = list.get(i).getAddress();
            lanhdao[i][5] = list.get(i).getCapbacham();
            lanhdao[i][6] = list.get(i).getChucvu();
        }
        LDtable.setModel(new DefaultTableModel(lanhdao, columnNamesLD));
    }
    public void fillLDFromSelectedRow() {
        // lấy chỉ số của hàng được chọn
        int row = LDtable.getSelectedRow();
        if (row >= 0) {
            FIDSearchLD.setText(LDtable.getModel().getValueAt(row, 0).toString());
            FNameSearchLD.setText(LDtable.getModel().getValueAt(row, 1).toString());
             String dateString = LDtable.getModel().getValueAt(row, 2).toString(); 
            // Chuỗi ngày tháng cần chuyển đổi
            JDateChooser dateChooser = new JDateChooser();

            // Định dạng của chuỗi ngày tháng
            SimpleDateFormat dateFormat = new SimpleDateFormat("dd/MM/yyyy");

            try {
                // Chuyển đổi chuỗi thành đối tượng Date
                Date date = dateFormat.parse(dateString);

                // Thiết lập ngày cho JDateChooser
                FDateSearchLD.setDate(date);
            } catch (ParseException e) {
                e.printStackTrace();
            }
            if ("Nam".equals(LDtable.getModel().getValueAt(row, 3).toString())) {
                CbMLD.setSelected(true);
            } else
                CbFLD.setSelected(true);
            FAddressSearchLD.setText(LDtable.getModel().getValueAt(row, 4).toString());
            FLevelSearchLD.setText(LDtable.getModel().getValueAt(row, 5).toString());
            FRoleSearchLD.setText(LDtable.getModel().getValueAt(row, 6).toString());
            // enable Edit and Delete buttons
            btnEditLD.setEnabled(true);
            btnDeleteLD.setEnabled(true);
            // disable Add button
            btnAddLD.setEnabled(false);
        }
    }
    public void showLD(Lanhdao lanhdao)
    {
        FIDSearchLD.setText(String.valueOf(lanhdao.getId()));
        FNameSearchLD.setText(lanhdao.getName());
        String dateString = lanhdao.getDate();
        SimpleDateFormat dateFormat = new SimpleDateFormat("dd/MM/yyyy");

        try {
            // Chuyển đổi chuỗi thành đối tượng Date
            Date date = dateFormat.parse(dateString);

            // Thiết lập ngày cho JDateChooser
            FDateSearchLD.setDate(date);
        } catch (ParseException e) {
            e.printStackTrace();
        }

        if (lanhdao.getSex() == "Nam") {
            CbMLD.setSelected(true);
        } else
            CbFLD.setSelected(true);
        FAddressSearchLD.setText(lanhdao.getAddress());
        FLevelSearchLD.setText(lanhdao.getCapbacham());
        FRoleSearchLD.setText(lanhdao.getChucvu());
        //enable Delete and edit button
        btnEditLD.setEnabled(true);
        btnDeleteLD.setEnabled(true);
        //disable Add button
        btnAddLD.setEnabled(false);
    }
    public void clearLDInfo() {
        FIDSearchLD.setText("");
        FNameSearchLD.setText("");
        String dateString = "01/01/2024"; // Chuỗi ngày tháng cần chuyển đổi
        JDateChooser dateChooser = new JDateChooser();

        // Định dạng của chuỗi ngày tháng
        SimpleDateFormat dateFormat = new SimpleDateFormat("dd/MM/yyyy");

        try {
            // Chuyển đổi chuỗi thành đối tượng Date
            Date date = dateFormat.parse(dateString);

            // Thiết lập ngày cho JDateChooser
            FDateSearchLD.setDate(date);
        } catch (ParseException e) {
            e.printStackTrace();
        }
        CbMLD.setSelected(true);
        FAddressSearchLD.setText("");
        FLevelSearchLD.setText("");
        FRoleSearchLD.setText("");
        // disable Edit and Delete buttons
        btnEditLD.setEnabled(false);
        btnDeleteLD.setEnabled(false);
        // enable Add button
        btnAddLD.setEnabled(true);

        LDtable.clearSelection();
    }
     public String getSelectedTextLD() {
        return CbbSeacrchLD.getSelectedItem().toString();
    }
    
    public String getSearchBoxLD()
    {
        return FSearchLD.getText().trim();
    }
     public void addAddLDListener(ActionListener listener) {
        btnAddLD.addActionListener(listener);
    }
    public Lanhdao getLDInfo()
    {
        if(!validateLDName() || !validateLDAddress() || !validateLDCapbacham() || !validateLDRole())
        {
            return null;
        }
        try
        {
            
            Lanhdao lanhdao = new Lanhdao();
            if(FIDSearchLD.getText()!=null && !"".equals(FIDSearchLD.getText()))
            {
                lanhdao.setId(Integer.parseInt(FIDSearchLD.getText()));
            }

            lanhdao.setName(FNameSearchLD.getText());
            SimpleDateFormat dateFormat = new SimpleDateFormat("dd/MM/yyyy");
            lanhdao.setDate(dateFormat.format(FDateSearchLD.getDate()));

            if(CbMLD.isSelected() == true)
                lanhdao.setSex("Nam");
            else
                lanhdao.setSex("Nữ");
            lanhdao.setAddress(FAddressSearchLD.getText());
            lanhdao.setCapbacham(FLevelSearchLD.getText());
            lanhdao.setChucvu(FRoleSearchLD.getText());
            return lanhdao;
        }
        catch (Exception ex)
        {
            ex.printStackTrace();
        }
        return null;
        
    }

    private boolean validateLDName()
    {
        String name = FNameSearchLD.getText();
        if(name == null || "".equals(name))
        {
            FNameSearchLD.requestFocus();
            showMessage("Tên không được để trống");
            return false;
        }
        return true;
    }

    private boolean validateLDAddress()
    {
        String address = FAddressSearchLD.getText();
        if(address == null || "".equals(address))
        {
            FAddressSearchLD.requestFocus();
            showMessage("Quê quán không được để trống");
            return false;
        }
        return true;
    }

    private boolean validateLDCapbacham()
    {
        String capbacham = FLevelSearchLD.getText();
        if(capbacham == null || "".equals(capbacham))
        {
            FLevelSearchLD.requestFocus();
            showMessage("Cấp bậc hàm không được để trống");
            return false;
        }
        return true;
    }

    private boolean validateLDRole()
    {
        String role = FRoleSearchLD.getText();
        if(role == null || "".equals(role))
        {
            FRoleSearchLD.requestFocus();
            showMessage("Chức vụ không được để trống");
            return false;
        }
        return true;
    }

    public boolean validateGVID()
    {
        String searchBox = FIDSearchGV.getText();
        //check if ID is a number
        
        try{
            int id = Integer.parseInt(searchBox);
            if(id < 0)
            {
                showMessage("ID không hợp lệ");
                return false;
            }
        }
        catch(NumberFormatException ex)
        {
            showMessage("ID không hợp lệ");
            return false;
        }
        return  true;
    }

    public boolean validateLDID()
    {
        String searchBox = FIDSearchLD.getText();
        //check if ID is a number
        
        try{
            int id = Integer.parseInt(searchBox);
            if(id < 0)
            {
                showMessage("ID không hợp lệ");
                return false;
            }
        }
        catch(NumberFormatException ex)
        {
            showMessage("ID không hợp lệ");
            return false;
        }
        return  true;
    }


    public void addEditLDListener(ActionListener listener) {
        btnEditLD.addActionListener(listener);
    }

    public void addDeleteLDListener(ActionListener listener) {
        btnDeleteLD.addActionListener(listener);
    }

    public void addClearLDListener(ActionListener listener) {
        btnClearLD.addActionListener(listener);
    }

    public void addListLDSelectionListener(ListSelectionListener listener) {
        LDtable.getSelectionModel().addListSelectionListener(listener);
    }

    public void addSearchLDListener(ActionListener listener) {
        btnSearchLD.addActionListener(listener);
    }
    public void addSortLDByIDListener(ActionListener listener)
    {
        btnSortbyidLD.addActionListener(listener);
    }
    public void addSortLDByNameListener(ActionListener listener)
    {
        btnSortbyNameLD.addActionListener(listener);
    }
    public void addSortLDByLevelListener(ActionListener listener)
    {
        btnSortbyLevelLD.addActionListener(listener);
    }
    public void addSortLDByRoleListener(ActionListener listener)
    {
        btnSortbyRole.addActionListener(listener);
    }
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BtnAddStudent;
    private javax.swing.JButton BtnClearStudent;
    private javax.swing.JButton BtnDeleteStudent;
    private javax.swing.JButton BtnEditStudent;
    private javax.swing.JCheckBox CbFGV;
    private javax.swing.JCheckBox CbFLD;
    private javax.swing.JCheckBox CbMGV;
    private javax.swing.JCheckBox CbMLD;
    private javax.swing.JComboBox<String> CbbSeacrchGV;
    private javax.swing.JComboBox<String> CbbSeacrchLD;
    private javax.swing.JTextField FAddressSearchGV;
    private javax.swing.JTextField FAddressSearchLD;
    private javax.swing.JTextField FAddressSearchStudent;
    private javax.swing.JTextField FClassSearchStudent;
    private com.toedter.calendar.JDateChooser FDateSearchGV;
    private com.toedter.calendar.JDateChooser FDateSearchLD;
    private javax.swing.JTextField FDateSearchStudent;
    private javax.swing.JTextField FIDSearchGV;
    private javax.swing.JTextField FIDSearchLD;
    private javax.swing.JTextField FIDSearchStudent;
    private javax.swing.JTextField FLevelSearchGV;
    private javax.swing.JTextField FLevelSearchLD;
    private javax.swing.JTextField FNameSearchGV;
    private javax.swing.JTextField FNameSearchLD;
    private javax.swing.JTextField FNameSearchStudent;
    private javax.swing.JTextField FRoleSearchGV;
    private javax.swing.JTextField FRoleSearchLD;
    private javax.swing.JTextField FScoreSearchStudent;
    private javax.swing.JTextField FSearchGV;
    private javax.swing.JTextField FSearchLD;
    private javax.swing.JTextField FSexStudent;
    private javax.swing.JTextField FTeacherSearchStudent;
    private javax.swing.JTable GVtable;
    private javax.swing.JTable LDtable;
    private javax.swing.JButton btnAddGV;
    private javax.swing.JButton btnAddLD;
    private javax.swing.JButton btnClearGV;
    private javax.swing.JButton btnClearLD;
    private javax.swing.JButton btnDeleteGV;
    private javax.swing.JButton btnDeleteLD;
    private javax.swing.JButton btnEditGV;
    private javax.swing.JButton btnEditLD;
    private javax.swing.JButton btnSearchGV;
    private javax.swing.JButton btnSearchLD;
    private javax.swing.JButton btnSortbyLevelGV;
    private javax.swing.JButton btnSortbyLevelLD;
    private javax.swing.JButton btnSortbyNameGV;
    private javax.swing.JButton btnSortbyNameLD;
    private javax.swing.JButton btnSortbyRole;
    private javax.swing.JButton btnSortbyidGV;
    private javax.swing.JButton btnSortbyidLD;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.JComboBox<String> cbDpChoose;
    private javax.swing.JComboBox<String> cbDpEdit;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JTabbedPane jTabbedPane4;
    // End of variables declaration//GEN-END:variables
}

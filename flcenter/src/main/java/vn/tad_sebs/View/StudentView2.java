/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package vn.tad_sebs.View;

import javax.swing.*;
import com.toedter.calendar.JDateChooser;

import java.awt.event.ActionListener;
import java.awt.event.KeyEvent;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.swing.event.ListSelectionListener;
import javax.swing.table.DefaultTableModel;
import javax.swing.tree.DefaultMutableTreeNode;
import javax.swing.tree.DefaultTreeModel;

import vn.tad_sebs.Model.CourseFeeEntry;
import vn.tad_sebs.Model.CourseTeacherEntry;
import vn.tad_sebs.Model.Entry;
import vn.tad_sebs.Model.Lop;
import vn.tad_sebs.Model.Monhoc;
import vn.tad_sebs.Model.Student;
import vn.tad_sebs.Model.Teacher;
import vn.tad_sebs.View.MainView;
import vn.tad_sebs.Controller.MainController;

import com.itextpdf.kernel.font.PdfFont;
import com.itextpdf.kernel.font.PdfFontFactory;
import com.itextpdf.kernel.pdf.PdfDocument;
import com.itextpdf.kernel.pdf.PdfReader;
import com.itextpdf.kernel.pdf.PdfWriter;
import com.itextpdf.forms.PdfAcroForm;
import com.itextpdf.forms.fields.PdfFormField;
import java.awt.event.ActionEvent;

import java.io.IOException;
import java.util.Set;
import java.util.logging.Level;
import java.util.logging.Logger;
import vn.tad_sebs.Controller.LoginController;
import vn.tad_sebs.Controller.MainController2;
import vn.tad_sebs.Model.User;

/**
 *
 * @author ASUS
 */
public class StudentView2 extends javax.swing.JFrame {

    private Student student;

    public StudentView2() {

        initComponents();
        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        listMonhoc.setEnabled(false);
        cbSelectedGV.setEnabled(false);
        btnGVSave.setEnabled(false);
        btnDone.setEnabled(false);

        student = new Student();
        Step2.setVisible(false);
        Step3.setVisible(false);
        Step4.setVisible(false);

        this.addWindowListener(new java.awt.event.WindowAdapter() {
            @Override
            public void windowClosed(java.awt.event.WindowEvent windowEvent) {
                MainView2 mainView2 = new MainView2();
                MainController2 mainController2 = new MainController2(mainView2);
                mainController2.showMainView2();
            }
        });

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated
    // <editor-fold defaultstate="collapsed" desc="Generated
    // <editor-fold defaultstate="collapsed" desc="Generated
    // <editor-fold defaultstate="collapsed" desc="Generated
    // <editor-fold defaultstate="collapsed" desc="Generated
    // <editor-fold defaultstate="collapsed" desc="Generated
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnGroup = new javax.swing.ButtonGroup();
        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        Step1 = new javax.swing.JLayeredPane();
        jLabel9 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        txtName = new javax.swing.JTextField();
        txtAddress = new javax.swing.JTextField();
        chkM = new javax.swing.JCheckBox();
        chkF = new javax.swing.JCheckBox();
        txtDate = new com.toedter.calendar.JDateChooser();
        Next1 = new javax.swing.JButton();
        jLabel18 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        Step2 = new javax.swing.JLayeredPane();
        jLabel7 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        txtPackInfo = new javax.swing.JTextArea();
        jScrollPane1 = new javax.swing.JScrollPane();
        listInv = new javax.swing.JList<>();
        jScrollPane6 = new javax.swing.JScrollPane();
        listChoose = new javax.swing.JList<>();
        jLabel22 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        btnPull = new javax.swing.JButton();
        btnPush = new javax.swing.JButton();
        Back2 = new javax.swing.JButton();
        Next2 = new javax.swing.JButton();
        jLabel17 = new javax.swing.JLabel();
        Step3 = new javax.swing.JLayeredPane();
        btnDone = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        listMonhoc = new javax.swing.JList<>();
        jLabel1 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        btnEditGV = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        tbPackageList = new javax.swing.JTable();
        jLabel11 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        btnGVSave = new javax.swing.JButton();
        Back3 = new javax.swing.JButton();
        cbSelectedGV = new javax.swing.JComboBox<>();
        jScrollPane7 = new javax.swing.JScrollPane();
        txtGVInfo = new javax.swing.JTextArea();
        Next3 = new javax.swing.JButton();
        jLabel24 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        Step4 = new javax.swing.JLayeredPane();
        jLabel27 = new javax.swing.JLabel();
        jLabel28 = new javax.swing.JLabel();
        jScrollPane5 = new javax.swing.JScrollPane();
        TeacherTree = new javax.swing.JTree();
        jLabel29 = new javax.swing.JLabel();
        FAddressSearchStudentStep4 = new javax.swing.JTextField();
        jLabel30 = new javax.swing.JLabel();
        chkFStep4 = new javax.swing.JCheckBox();
        jLabel31 = new javax.swing.JLabel();
        FDateSearchStudentStep4 = new com.toedter.calendar.JDateChooser();
        BtnAddStudentNew = new javax.swing.JButton();
        jScrollPane8 = new javax.swing.JScrollPane();
        tbPackageListStep4 = new javax.swing.JTable();
        chkMStep4 = new javax.swing.JCheckBox();
        jLabel33 = new javax.swing.JLabel();
        Back4 = new javax.swing.JButton();
        jLabel35 = new javax.swing.JLabel();
        FNameSearchStudentStep4 = new javax.swing.JTextField();
        jLabel37 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("ĐĂNG KÝ KHÓA HỌC");
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setIconImage(icon.getImage());
        setMinimumSize(new java.awt.Dimension(900, 600));
        setPreferredSize(new java.awt.Dimension(900, 600));
        setResizable(false);
        setSize(new java.awt.Dimension(900, 600));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        Step1.setMinimumSize(new java.awt.Dimension(800, 670));
        Step1.setPreferredSize(new java.awt.Dimension(900, 600));
        Step1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel9.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(51, 255, 73));
        jLabel9.setText("Họ và tên");
        Step1.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 210, -1, 10));

        jLabel14.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(51, 255, 73));
        jLabel14.setText("Ngày sinh");
        Step1.add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 290, -1, -1));

        jLabel15.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(51, 255, 73));
        jLabel15.setText("Giới tính");
        Step1.add(jLabel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 370, -1, -1));

        jLabel16.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        jLabel16.setForeground(new java.awt.Color(51, 255, 73));
        jLabel16.setText("Quê quán");
        Step1.add(jLabel16, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 460, -1, -1));

        txtName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNameActionPerformed(evt);
            }
        });
        Step1.add(txtName, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 192, 240, 30));
        Step1.add(txtAddress, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 442, 250, 30));

        buttonGroup2.add(chkM);
        chkM.setForeground(new java.awt.Color(255, 255, 255));
        chkM.setText("Nam");
        chkM.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkMActionPerformed(evt);
            }
        });
        Step1.add(chkM, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 360, -1, -1));

        buttonGroup2.add(chkF);
        chkF.setForeground(new java.awt.Color(255, 255, 255));
        chkF.setText("Nữ");
        chkF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkFActionPerformed(evt);
            }
        });
        Step1.add(chkF, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 360, -1, -1));

        txtDate.setDateFormatString("dd/MM/yyyy");
        Step1.add(txtDate, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 272, -1, 30));

        Next1.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        Next1.setText("Tiếp tục");
        Next1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Next1ActionPerformed(evt);
            }
        });
        Step1.add(Next1, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 530, 90, 30));

        jLabel18.setFont(new java.awt.Font("Verdana", 1, 36)); // NOI18N
        jLabel18.setForeground(new java.awt.Color(51, 255, 73));
        jLabel18.setText("ĐĂNG KÝ THÔNG TIN HỌC VIÊN MỚI");
        Step1.add(jLabel18, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 20, -1, -1));

        jLabel20.setFont(new java.awt.Font("Verdana", 1, 18)); // NOI18N
        jLabel20.setText("ĐĂNG KÝ THÔNG TIN CÁ NHÂN");
        Step1.add(jLabel20, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 90, -1, -1));

        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/vn/tad_sebs/icon/QLHV2.png"))); // NOI18N
        Step1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 900, 600));

        getContentPane().add(Step1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        Step2.setPreferredSize(new java.awt.Dimension(900, 600));
        Step2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel7.setFont(new java.awt.Font("Verdana", 1, 36)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(51, 255, 73));
        jLabel7.setText("ĐĂNG KÝ THÔNG TIN HỌC VIÊN MỚI");
        Step2.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 20, -1, -1));

        jLabel21.setFont(new java.awt.Font("Verdana", 1, 18)); // NOI18N
        jLabel21.setText("ĐĂNG KÝ KHÓA HỌC");
        Step2.add(jLabel21, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 80, -1, -1));

        txtPackInfo.setColumns(20);
        txtPackInfo.setRows(5);
        txtPackInfo.setEnabled(false);
        jScrollPane4.setViewportView(txtPackInfo);

        Step2.add(jScrollPane4, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 230, 350, 260));

        jScrollPane1.setViewportView(listInv);

        Step2.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 230, 140, 260));

        jScrollPane6.setViewportView(listChoose);

        Step2.add(jScrollPane6, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 230, 140, 260));

        jLabel22.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        jLabel22.setForeground(new java.awt.Color(51, 255, 73));
        jLabel22.setText("KHÓA HỌC HIỆN CÓ");
        Step2.add(jLabel22, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 200, -1, -1));

        jLabel23.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        jLabel23.setForeground(new java.awt.Color(51, 255, 73));
        jLabel23.setText("KHÓA HỌC ĐÃ CHỌN");
        Step2.add(jLabel23, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 200, -1, -1));

        btnPull.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        btnPull.setText("<<");
        Step2.add(btnPull, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 380, 60, 30));

        btnPush.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        btnPush.setText(">>");
        Step2.add(btnPush, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 310, 60, 30));

        Back2.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        Back2.setText("Trở lại");
        Back2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Back2ActionPerformed(evt);
            }
        });
        Step2.add(Back2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 530, -1, 30));

        Next2.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        Next2.setText("Tiếp tục");
        Next2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Next2ActionPerformed(evt);
            }
        });
        Step2.add(Next2, new org.netbeans.lib.awtextra.AbsoluteConstraints(800, 530, -1, 30));

        jLabel17.setIcon(new javax.swing.ImageIcon(getClass().getResource("/vn/tad_sebs/icon/QLHV2.png"))); // NOI18N
        Step2.add(jLabel17, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 900, 600));

        getContentPane().add(Step2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        Step3.setPreferredSize(new java.awt.Dimension(900, 600));
        Step3.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        btnDone.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        btnDone.setText("Hoàn tất");
        btnDone.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDoneActionPerformed(evt);
            }
        });
        Step3.add(btnDone, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 490, 90, -1));

        jScrollPane2.setViewportView(listMonhoc);

        Step3.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 230, 110, 160));

        jLabel1.setFont(new java.awt.Font("Verdana", 1, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(51, 255, 73));
        jLabel1.setText("ĐĂNG KÝ THÔNG TIN HỌC VIÊN MỚI");
        Step3.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 20, -1, -1));

        jLabel13.setBackground(new java.awt.Color(255, 255, 255));
        jLabel13.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(51, 255, 73));
        jLabel13.setText("Giáo viên được chọn");
        Step3.add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 190, 190, -1));

        btnEditGV.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        btnEditGV.setText("Chỉnh sửa giáo viên cho khoá");
        Step3.add(btnEditGV, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 490, 220, -1));

        tbPackageList.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane3.setViewportView(tbPackageList);

        Step3.add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 160, 410, 320));

        jLabel11.setBackground(new java.awt.Color(255, 255, 255));
        jLabel11.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(51, 255, 73));
        jLabel11.setText("Khoá học đã đăng ký");
        Step3.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 120, 190, -1));

        jLabel5.setBackground(new java.awt.Color(255, 255, 255));
        jLabel5.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(51, 255, 73));
        jLabel5.setText("-->");
        Step3.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 270, 30, -1));

        btnGVSave.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        btnGVSave.setText("Lưu");
        btnGVSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGVSaveActionPerformed(evt);
            }
        });
        Step3.add(btnGVSave, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 340, -1, -1));

        Back3.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        Back3.setText("Trở lại");
        Back3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Back3ActionPerformed(evt);
            }
        });
        Step3.add(Back3, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 530, -1, 30));

        cbSelectedGV.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbSelectedGVActionPerformed(evt);
            }
        });
        Step3.add(cbSelectedGV, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 240, 140, 70));

        txtGVInfo.setColumns(20);
        txtGVInfo.setRows(5);
        jScrollPane7.setViewportView(txtGVInfo);

        Step3.add(jScrollPane7, new org.netbeans.lib.awtextra.AbsoluteConstraints(750, 240, 110, 250));

        Next3.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        Next3.setText("Tiếp tục");
        Next3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Next3ActionPerformed(evt);
            }
        });
        Step3.add(Next3, new org.netbeans.lib.awtextra.AbsoluteConstraints(800, 530, 80, 30));

        jLabel24.setFont(new java.awt.Font("Verdana", 1, 18)); // NOI18N
        jLabel24.setText("LỰA CHỌN GIÁO VIÊN");
        Step3.add(jLabel24, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 80, -1, -1));

        jLabel8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/vn/tad_sebs/icon/QLHV2.png"))); // NOI18N
        Step3.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 900, 600));

        getContentPane().add(Step3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        Step4.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel27.setFont(new java.awt.Font("Verdana", 1, 18)); // NOI18N
        jLabel27.setForeground(new java.awt.Color(51, 255, 73));
        jLabel27.setText("KIỂM TRA LẠI THÔNG TIN !!!");
        Step4.add(jLabel27, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 460, -1, 30));

        jLabel28.setBackground(new java.awt.Color(255, 255, 255));
        jLabel28.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        jLabel28.setForeground(new java.awt.Color(51, 255, 73));
        jLabel28.setText("Ngày sinh");
        Step4.add(jLabel28, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 340, 90, -1));

        jScrollPane5.setViewportView(TeacherTree);

        Step4.add(jScrollPane5, new org.netbeans.lib.awtextra.AbsoluteConstraints(670, 170, 210, 270));

        jLabel29.setBackground(new java.awt.Color(255, 255, 255));
        jLabel29.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        jLabel29.setForeground(new java.awt.Color(51, 255, 73));
        jLabel29.setText("Giới tính");
        Step4.add(jLabel29, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 280, 70, -1));

        FAddressSearchStudentStep4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FAddressSearchStudentStep4ActionPerformed(evt);
            }
        });
        Step4.add(FAddressSearchStudentStep4, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 392, 163, 30));

        jLabel30.setBackground(new java.awt.Color(255, 255, 255));
        jLabel30.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        jLabel30.setForeground(new java.awt.Color(51, 255, 73));
        jLabel30.setText("Quê quán");
        Step4.add(jLabel30, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 400, 80, -1));

        btnGroup.add(chkFStep4);
        chkFStep4.setForeground(new java.awt.Color(255, 255, 255));
        chkFStep4.setText("Nữ");
        Step4.add(chkFStep4, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 280, 70, -1));

        jLabel31.setFont(new java.awt.Font("Verdana", 1, 36)); // NOI18N
        jLabel31.setForeground(new java.awt.Color(51, 255, 73));
        jLabel31.setText("ĐĂNG KÝ THÔNG TIN HỌC VIÊN MỚI");
        Step4.add(jLabel31, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 20, -1, -1));

        FDateSearchStudentStep4.setDateFormatString("dd/MM/yyyy");
        Step4.add(FDateSearchStudentStep4, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 332, 163, 30));

        BtnAddStudentNew.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        BtnAddStudentNew.setIcon(new javax.swing.ImageIcon(getClass().getResource("/vn/tad_sebs/icon/Add.png"))); // NOI18N
        BtnAddStudentNew.setText("Thêm");
        Step4.add(BtnAddStudentNew, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 510, 110, 40));

        tbPackageListStep4.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane8.setViewportView(tbPackageListStep4);

        Step4.add(jScrollPane8, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 190, 280, 250));

        btnGroup.add(chkMStep4);
        chkMStep4.setForeground(new java.awt.Color(255, 255, 255));
        chkMStep4.setText("Nam");
        Step4.add(chkMStep4, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 280, 80, -1));

        jLabel33.setBackground(new java.awt.Color(255, 255, 255));
        jLabel33.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        jLabel33.setForeground(new java.awt.Color(51, 255, 73));
        jLabel33.setText("Khoá học đã đăng ký");
        Step4.add(jLabel33, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 150, 190, -1));

        Back4.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        Back4.setText("Trở lại");
        Back4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Back4ActionPerformed(evt);
            }
        });
        Step4.add(Back4, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 530, -1, 30));

        jLabel35.setBackground(new java.awt.Color(255, 255, 255));
        jLabel35.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        jLabel35.setForeground(new java.awt.Color(51, 255, 73));
        jLabel35.setText("Họ và tên");
        Step4.add(jLabel35, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 220, 80, -1));
        Step4.add(FNameSearchStudentStep4, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 212, 163, 30));

        jLabel37.setIcon(new javax.swing.ImageIcon(getClass().getResource("/vn/tad_sebs/icon/QLHV2.png"))); // NOI18N
        Step4.add(jLabel37, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 900, 600));

        getContentPane().add(Step4, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnDoneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDoneActionPerformed
        hideTeacherRelated();
    }//GEN-LAST:event_btnDoneActionPerformed

    private void cbSelectedGVActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbSelectedGVActionPerformed
        showTeacherInfo();
    }//GEN-LAST:event_cbSelectedGVActionPerformed

    private void chkFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkFActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_chkFActionPerformed

    private void chkMActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkMActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_chkMActionPerformed

    private void txtNameActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_txtNameActionPerformed
        // TODO add your handling code here:
    }// GEN-LAST:event_txtNameActionPerformed

    private void FAddressSearchStudentStep4ActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_FAddressSearchStudentStep4ActionPerformed
        // TODO add your handling code here:
    }// GEN-LAST:event_FAddressSearchStudentStep4ActionPerformed

    private void Next1ActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_Next1ActionPerformed
        student.setName(txtName.getText());
        student.setAddress(txtAddress.getText());
        student.setDate(new SimpleDateFormat("dd/MM/yyyy").format(txtDate.getDate()));
        student.setGioitinh(chkM.isSelected() ? "Nam" : "Nữ");
        Step1.setVisible(false);
        Step2.setVisible(true);
        this.getLayeredPane().moveToFront(Step2);
    }// GEN-LAST:event_Next1ActionPerformed

    private void Next2ActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_Next2ActionPerformed
        int rowCount = listChoose.getModel().getSize();
        List<Integer> list = new ArrayList<>();
        for (int i = 0; i < rowCount; i++) {

            list.add(Integer.parseInt(listChoose.getModel().getElementAt(i).split(" - ")[0]));

        }
        student.setLop(list);
        // get data for tbPackageList
        DefaultTableModel model = new DefaultTableModel();
        model.setColumnIdentifiers(columnPackageNames);
        for (int i = 0; i < student.getLop().size(); i++) {
            for (Lop lop : listLop) {
                if (lop.getId() == student.getLop().get(i)) {
                    model.addRow(new Object[] { lop.getId(), lop.getName() });
                }
            }
        }
        tbPackageList.setModel(model);

        // add courseId and its idMonhoc to courseTeacherMap
        for (int i = 0; i < student.getLop().size(); i++) {
            CourseTeacherEntry entry = new CourseTeacherEntry();
            entry.setCourseId(student.getLop().get(i));
            List<Entry> teacherMap = new ArrayList<>();
            
                for (Lop lop : listLop) {
                    if (lop.getId() == student.getLop().get(i)) {
                        for (Integer idMon : lop.getIdMonhoc()) {
                            Entry teacherEntry = new Entry();
                            teacherEntry.setIdMonhoc(idMon);
                            for (Teacher teacher : listTeacher) {
                                if (teacher.getMon() == idMon) {
                                    teacherEntry.setIdTeacher(teacher.getId());
                                    break;
                                }
                            }
                            teacherMap.add(teacherEntry);
                        }
                    }
                }

            entry.setTeacherMap(teacherMap);
            courseTeacherMap.add(entry);
        }

        // add data to courseFeeMap
        List<CourseFeeEntry> courseFeeMap = new ArrayList<>();
        for (int i = 0; i < student.getLop().size(); i++) {
            CourseFeeEntry entry = new CourseFeeEntry();
            entry.setCourseId(student.getLop().get(i));
            entry.setFee(false);
            courseFeeMap.add(entry);
        }
        student.setCourseFeeMap(courseFeeMap);

        Step2.setVisible(false);
        Step3.setVisible(true);
        this.getLayeredPane().moveToFront(Step3);
    }// GEN-LAST:event_Next2ActionPerformed

    private void Back2ActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_Back2ActionPerformed

        student.setLop(new ArrayList<>());
        Step2.setVisible(false);
        Step1.setVisible(true);
        this.getLayeredPane().moveToFront(Step1);
    }// GEN-LAST:event_Back2ActionPerformed

    private void Next3ActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_Next3ActionPerformed
        student.setCourseTeacherMap(courseTeacherMap);
        Step3.setVisible(false);
        Step4.setVisible(true);
        showStudent();
        this.getLayeredPane().moveToFront(Step4);
    }// GEN-LAST:event_Next3ActionPerformed

    private void Back3ActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_Back3ActionPerformed
        courseTeacherMap.clear();
        tbPackageList.setModel(new DefaultTableModel());
        student.setCourseTeacherMap(courseTeacherMap);
        Step3.setVisible(false);
        listMonhoc.setEnabled(true);
        cbSelectedGV.setEnabled(true);
        btnGVSave.setEnabled(true);
        btnDone.setEnabled(true);
        Step2.setVisible(true);
        this.getLayeredPane().moveToFront(Step2);
    }// GEN-LAST:event_Back3ActionPerformed

    private void Back4ActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_Back4ActionPerformed
        Step4.setVisible(false);
        Step3.setVisible(true);
        this.getLayeredPane().moveToFront(Step3);
    }// GEN-LAST:event_Back4ActionPerformed

    public int editingPackage;

    private void btnGVSaveActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_btnGVSaveActionPerformed
        // lưu thông tin vào courseTeacherMap
        int idTeacher = Integer.parseInt(cbSelectedGV.getSelectedItem().toString().split(" - ")[0]);
        int idMonhoc = Integer.parseInt(listMonhoc.getSelectedValue().split(" - ")[0]);
        System.out.println(editingPackage);

        for (CourseTeacherEntry entry : courseTeacherMap) {
            if (entry.getCourseId() == editingPackage) {
                for (Entry teacherEntry : entry.getTeacherMap()) {
                    if (teacherEntry.getIdMonhoc() == idMonhoc) {
                        teacherEntry.setIdTeacher(idTeacher);
                        break;
                    }
                }
            }
        }

        showMessage("Đã chọn giáo viên cho môn học!");

    }// GEN-LAST:event_btnGVSaveActionPerformed

    ImageIcon icon = new ImageIcon((getClass().getResource("/vn/tad_sebs/icon/icon.png")));

    private List<Teacher> listTeacher = new ArrayList<>();

    public void getListTeachers(List<Teacher> list) {
        listTeacher = list;
        DefaultComboBoxModel<String> model = new DefaultComboBoxModel<>();
        for (Teacher teacher : listTeacher) {
            model.addElement(teacher.getId() + " - " + teacher.getName());
        }
        cbSelectedGV.setModel(model);
    }

    private void BtnAddStudentActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_BtnAddStudentActionPerformed
        // TODO add your handling code here:
    }// GEN-LAST:event_BtnAddStudentActionPerformed

    private void BtnClearStudentActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_BtnClearStudentActionPerformed
        // TODO add your handling code here:
    }// GEN-LAST:event_BtnClearStudentActionPerformed

    private void BtnEditStudentActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_BtnEditStudentActionPerformed
        // TODO add your handling code here:
    }// GEN-LAST:event_BtnEditStudentActionPerformed

    private void BtnSearchStudentActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_BtnSearchStudentActionPerformed
        // TODO add your handling code here:
    }// GEN-LAST:event_BtnSearchStudentActionPerformed

    private void FIDSearchStudentActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_FIDSearchStudentActionPerformed
        // TODO add your handling code here:
    }// GEN-LAST:event_FIDSearchStudentActionPerformed

    private void FAddressSearchStudentActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_FAddressSearchStudentActionPerformed
        // TODO add your handling code here:
    }// GEN-LAST:event_FAddressSearchStudentActionPerformed

    private void FTeacherSearchStudentActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_FTeacherSearchStudentActionPerformed
        // TODO add your handling code here:
    }// GEN-LAST:event_FTeacherSearchStudentActionPerformed

    private String[] columnPackageNames = new String[] {
            "ID", "Tên khoá" };

    private List<Monhoc> listSubs = new ArrayList<>();

    public void getListSubjects(List<Monhoc> list) {
        listSubs = list;
    }

    private List<Lop> listLop = new ArrayList<>();

    public void getListLops(List<Lop> list) {
        listLop = list;
    }

    public void showPackagesFromData(List<Lop> listLops) {
        // add to listInv
        DefaultListModel<String> model = new DefaultListModel<>();
        for (Lop lop : listLops) {
            model.addElement(lop.getId() + " - " + lop.getName());
        }
        listInv.setModel(model);
    }

    public JList<String> getListInv() {
        return listInv;
    }

    public JList<String> getListChoose() {
        return listChoose;
    }

    public void moveSelectedItems(JList<String> sourceList, JList<String> destinationList) {
        // Get selected index
        int index = sourceList.getSelectedIndex();
        if (index != -1) {
            // Get selected item
            String selectedItem = sourceList.getSelectedValue();

            // Create new DefaultListModel for destinationList and add selected item
            DefaultListModel<String> destinationModel = new DefaultListModel<>();
            for (int i = 0; i < destinationList.getModel().getSize(); i++) {
                destinationModel.addElement(destinationList.getModel().getElementAt(i));
            }
            destinationModel.addElement(selectedItem);
            destinationList.setModel(destinationModel);

            // Create new DefaultListModel for sourceList and remove selected item
            DefaultListModel<String> sourceModel = new DefaultListModel<>();
            for (int i = 0; i < sourceList.getModel().getSize(); i++) {
                if (i != index) {
                    sourceModel.addElement(sourceList.getModel().getElementAt(i));
                }
            }
            sourceList.setModel(sourceModel);
        }
    }

    private List<Integer> editingLop;
    private List<CourseTeacherEntry> courseTeacherMap = new ArrayList<>();

    public void resetStudent() {
        student = new Student();
    }

    public void showStudent() {

        FNameSearchStudentStep4.setText(student.getName());

        String dateString = student.getDate();
        SimpleDateFormat dateFormat = new SimpleDateFormat("dd/MM/yyyy");

        try {
            // Chuyển đổi chuỗi thành đối tượng Date
            Date date = dateFormat.parse(dateString);

            // Thiết lập ngày cho JDateChooser
            FDateSearchStudentStep4.setDate(date);
        } catch (ParseException e) {
            e.printStackTrace();
        }
        if (student.getGioitinh().equals("Nam")) {
            chkMStep4.setSelected(true);
        } else
            chkFStep4.setSelected(true);
        FAddressSearchStudentStep4.setText(student.getAddress());

        // get data for tbPackageListStep4
        DefaultTableModel model = new DefaultTableModel();
        model.setColumnIdentifiers(columnPackageNames);
        for (int i = 0; i < student.getLop().size(); i++) {
            for (Lop lop : listLop) {
                if (lop.getId() == student.getLop().get(i)) {
                    model.addRow(new Object[] { lop.getId(), lop.getName() });
                }
            }
        }
        tbPackageListStep4.setModel(model);

        // put courseTeacherMap to TeacherTree
        DefaultMutableTreeNode root = new DefaultMutableTreeNode("Danh sách giáo viên đã chọn");
        for (CourseTeacherEntry entry : courseTeacherMap) {
            // get Lop name having entry.getCourseId()
            String lopName = "";
            for (Lop lop : listLop) {
                if (lop.getId() == entry.getCourseId()) {
                    lopName = lop.getName();
                    break;
                }
            }
            DefaultMutableTreeNode courseNode = new DefaultMutableTreeNode(entry.getCourseId() + " - " + lopName);
            // get subject's name and teacher's name from entry.getTeacherMap()
            for (Entry teacherEntry : entry.getTeacherMap()) {
                String subjectName = "";
                for (Monhoc monhoc : listSubs) {
                    if (monhoc.getId() == teacherEntry.getIdMonhoc()) {
                        subjectName = monhoc.getName();
                        break;
                    }
                }
                String teacherName = "";
                for (Teacher teacher : listTeacher) {
                    if (teacher.getId() == teacherEntry.getIdTeacher()) {
                        teacherName = teacher.getName();
                        break;
                    }
                }
                DefaultMutableTreeNode teacherNode = new DefaultMutableTreeNode(
                        "(" + teacherEntry.getIdTeacher() + ") " + teacherName + " - " + subjectName);
                courseNode.add(teacherNode);
            }
            root.add(courseNode);
        }
        TeacherTree.setModel(new DefaultTreeModel(root));

        // enable Delete and edit button

    }

    public void addListPackageSelectionListener(ListSelectionListener listener) {
        tbPackageList.getSelectionModel().addListSelectionListener(listener);
    }

    public void addListMonhocSelectionListener(ListSelectionListener listener) {
        listMonhoc.addListSelectionListener(listener);
    }
    
    public void addListInvSelectionListener(ListSelectionListener listener) {
        listInv.addListSelectionListener(listener);
    }

    public void addListChooseSelectionListener(ListSelectionListener listener) {
        listChoose.addListSelectionListener(listener);
    }

    public int getSelectedPackageFromListInv() {
        if(listInv.getSelectedIndex() == -1)
        return -1;
        
        return Integer.parseInt(listInv.getSelectedValue().split(" - ")[0]);
    }

    public int getSelectedPackageFromListChoose() {
        if(listChoose.getSelectedIndex() == -1)
        return -1;
        
        return Integer.parseInt(listChoose.getSelectedValue().split(" - ")[0]);
    }
    public void showPackageInfo(Lop lop)
    {
        //thông tin bao gồm: tên khoá, các môn học trong khoá, thời gian khoá học, giá của khoá
        String info = "Tên khoá: " + lop.getName() + "\n";
        info += "Các môn học trong khoá: \n";
        for (Integer idMon : lop.getIdMonhoc()) {
            for (Monhoc monhoc : listSubs) {
                if (monhoc.getId() == idMon) {
                    info += monhoc.getName() + "\n";
                    break;
                }
            }
        }
        info += "Thời gian: " + lop.getLength() + "\n";
        info += "Giá: " + lop.getPrice() + "\n";
        txtPackInfo.setText(info);
    }
    
    

    public void showTeacherInfo()
    {
        //get id from cbSelectedGV
        if(cbSelectedGV.getSelectedItem() == null)
            return;
        int id = Integer.parseInt(cbSelectedGV.getSelectedItem().toString().split(" - ")[0]);
        for (Teacher teacher : listTeacher)
        {
            if (teacher.getId() == id)
            {
                //hiển thị tất cả thông tin thuộc tính của giáo viên

                String info = "ID: " + teacher.getId() + "\n";
                info += "Tên: " + teacher.getName() + "\n";
                info += "Ngày sinh: " + teacher.getDate() + "\n";
                info += "Giới tính: " + teacher.getSex() + "\n";
                info += "Địa chỉ: " + teacher.getAddress() + "\n";
                info += "Cấp bậc hàm: " + teacher.getCapbacham();

                txtGVInfo.setText(info);
                break;
            }
        }
        
    }

    public int getSelectedPackage() {
        return Integer.parseInt(tbPackageList.getValueAt(tbPackageList.getSelectedRow(), 0).toString());
    }

    public void showMessage(String message) {
        JOptionPane.showMessageDialog(this, message);
    }

    public void showListGV(List<Teacher> teachersList) {
        cbSelectedGV.removeAllItems();
        for (Teacher teacher : teachersList) {
            cbSelectedGV.addItem(teacher.getId() + " - " + teacher.getName());
        }

        // set selection for cbSelectedGV, searching data in courseTeacherMap
        for (CourseTeacherEntry entry : courseTeacherMap) {
            if (entry.getCourseId() == editingPackage) {
                for (Entry teacherEntry : entry.getTeacherMap()) {
                    if (teacherEntry.getIdMonhoc() == getSelectedSubject()) {
                        String teacherName = "";
                        for (Teacher teacher : teachersList) {
                            if (teacher.getId() == teacherEntry.getIdTeacher()) {
                                teacherName = teacher.getName();
                                break;
                            }
                        }
                        cbSelectedGV.setSelectedItem(teacherEntry.getIdTeacher() + " - " + teacherName);
                        break;
                    }
                }
            }
        }

    }

    public void showListMonhoc(int id) {
        editingPackage = id;
        for (CourseTeacherEntry entry : courseTeacherMap) {
            if (entry.getCourseId() == id) {
                // get Lop with id
                Lop edLop = null;
                for (Lop lop : listLop) {
                    if (lop.getId() == id) {
                        edLop = lop;
                        break;
                    }
                }
                DefaultListModel<String> model = new DefaultListModel<>();
                for (Integer m : edLop.getIdMonhoc()) {
                    for (Monhoc monhoc : listSubs) {
                        if (monhoc.getId() == m) {
                            model.addElement(monhoc.getId() + " - " + monhoc.getName());
                            break;
                        }
                    }
                }
                listMonhoc.setModel(model);
                break;
            }
        }
    }

    public int getSelectedSubject() {
        return Integer.parseInt(listMonhoc.getSelectedValue().toString().split(" - ")[0]);
    }

    public Student getStudentInfo() {

        return student;

    }

    public void addBack2Listener(ActionListener listener) {
        Back2.addActionListener(listener);
    }

    public void addNext1Listener(ActionListener listener) {
        Next1.addActionListener(listener);
    }

    public void addNext2Listener(ActionListener listener) {
        Next2.addActionListener(listener);
    }

    public void addBack3Listener(ActionListener listener) {
        Back3.addActionListener(listener);
    }

    public void addNext3Listener(ActionListener listener) {
        Next3.addActionListener(listener);
    }

    public void addBack4Listener(ActionListener listener) {
        Back4.addActionListener(listener);
    }

    public void addAddStudentListener(ActionListener listener) {
        BtnAddStudentNew.addActionListener(listener);
    }

    public void addPushListener(ActionListener listener) {
        btnPush.addActionListener(listener);
    }

    public void addPullListener(ActionListener listener) {
        btnPull.addActionListener(listener);
    }

    public void addEditGVListener( ActionListener listener) {
        btnEditGV.addActionListener(listener);
    }

    public JList getListMonhoc() {
        return listMonhoc;
    }

    public void hidePackageRelated()
    {
        
        
        tbPackageList.setEnabled(false);
        
        btnEditGV.setEnabled(false);
        

        listMonhoc.setEnabled(true);
        cbSelectedGV.setEnabled(true);
        btnGVSave.setEnabled(true);
        btnDone.setEnabled(true);


    }

    public void hideTeacherRelated()
    {
        listMonhoc.setEnabled(false);
        cbSelectedGV.setEnabled(false);
        btnGVSave.setEnabled(false);
        btnDone.setEnabled(false);

        tbPackageList.setEnabled(true);
        btnEditGV.setEnabled(true);
        
    }

    // public void clearStudentInfo()
    // {
    // FIDSearchStudentStep3.setText("");
    // FNameSearchStudentStep3.setText("");
    //
    // SimpleDateFormat dateFormat = new SimpleDateFormat("dd/MM/yyyy");
    //
    // try {
    // // Chuyển đổi chuỗi thành đối tượng Date
    // Date date = dateFormat.parse("01/01/2024");
    //
    // // Thiết lập ngày cho JDateChooser
    // FDateSearchStudentStep3.setDate(date);
    // } catch (ParseException e) {
    // e.printStackTrace();
    // }

    // chkMStep3.setSelected(true);
    // FAddressSearchStudentStep3.setText("");
    // DefaultTableModel model = (DefaultTableModel) tbPackageList.getModel();
    // model.setRowCount(0);
    // DefaultListModel<String> listModel = new DefaultListModel<>();
    // listMonhoc.setModel(listModel);
    // FNameSearchStudentStep3.setEnabled(true);
    // FDateSearchStudentStep3.setEnabled(true);
    // chkMStep3.setEnabled(true);
    // chkFStep3.setEnabled(true);
    // FAddressSearchStudentStep3.setEnabled(true);
    // BtnAddStudent.setEnabled(true);
    //
    // }

    /*
     * private boolean validateName() {
     * 
     * }
     * 
     * private boolean validateAddress() {
     * 
     * }
     */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Back2;
    private javax.swing.JButton Back3;
    private javax.swing.JButton Back4;
    private javax.swing.JButton BtnAddStudentNew;
    private javax.swing.JTextField FAddressSearchStudentStep4;
    private com.toedter.calendar.JDateChooser FDateSearchStudentStep4;
    private javax.swing.JTextField FNameSearchStudentStep4;
    private javax.swing.JButton Next1;
    private javax.swing.JButton Next2;
    private javax.swing.JButton Next3;
    private javax.swing.JLayeredPane Step1;
    private javax.swing.JLayeredPane Step2;
    private javax.swing.JLayeredPane Step3;
    private javax.swing.JLayeredPane Step4;
    private javax.swing.JTree TeacherTree;
    private javax.swing.JButton btnDone;
    private javax.swing.JButton btnEditGV;
    private javax.swing.JButton btnGVSave;
    private javax.swing.ButtonGroup btnGroup;
    private javax.swing.JButton btnPull;
    private javax.swing.JButton btnPush;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.JComboBox<String> cbSelectedGV;
    private javax.swing.JCheckBox chkF;
    private javax.swing.JCheckBox chkFStep4;
    private javax.swing.JCheckBox chkM;
    private javax.swing.JCheckBox chkMStep4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel37;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JList<String> listChoose;
    private javax.swing.JList<String> listInv;
    private javax.swing.JList<String> listMonhoc;
    private javax.swing.JTable tbPackageList;
    private javax.swing.JTable tbPackageListStep4;
    private javax.swing.JTextField txtAddress;
    private com.toedter.calendar.JDateChooser txtDate;
    private javax.swing.JTextArea txtGVInfo;
    private javax.swing.JTextField txtName;
    private javax.swing.JTextArea txtPackInfo;
    // End of variables declaration//GEN-END:variables
}
